#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sitecore.SharedSource.Analytics.Context
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Sitecore_analytics")]
	public partial class AnalyticsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAutomation(Automation instance);
    partial void UpdateAutomation(Automation instance);
    partial void DeleteAutomation(Automation instance);
    partial void InsertVisit(Visit instance);
    partial void UpdateVisit(Visit instance);
    partial void DeleteVisit(Visit instance);
    partial void InsertAutomationState(AutomationState instance);
    partial void UpdateAutomationState(AutomationState instance);
    partial void DeleteAutomationState(AutomationState instance);
    partial void InsertBrowser(Browser instance);
    partial void UpdateBrowser(Browser instance);
    partial void DeleteBrowser(Browser instance);
    partial void InsertCache_TrafficByDay(Cache_TrafficByDay instance);
    partial void UpdateCache_TrafficByDay(Cache_TrafficByDay instance);
    partial void DeleteCache_TrafficByDay(Cache_TrafficByDay instance);
    partial void InsertCache_ValueBySource(Cache_ValueBySource instance);
    partial void UpdateCache_ValueBySource(Cache_ValueBySource instance);
    partial void DeleteCache_ValueBySource(Cache_ValueBySource instance);
    partial void InsertCache_VisitEvent(Cache_VisitEvent instance);
    partial void UpdateCache_VisitEvent(Cache_VisitEvent instance);
    partial void DeleteCache_VisitEvent(Cache_VisitEvent instance);
    partial void InsertCache_VisitorsByLocation(Cache_VisitorsByLocation instance);
    partial void UpdateCache_VisitorsByLocation(Cache_VisitorsByLocation instance);
    partial void DeleteCache_VisitorsByLocation(Cache_VisitorsByLocation instance);
    partial void InsertCampaign(Campaign instance);
    partial void UpdateCampaign(Campaign instance);
    partial void DeleteCampaign(Campaign instance);
    partial void InsertGeoIp(GeoIp instance);
    partial void UpdateGeoIp(GeoIp instance);
    partial void DeleteGeoIp(GeoIp instance);
    partial void InsertItemUrl(ItemUrl instance);
    partial void UpdateItemUrl(ItemUrl instance);
    partial void DeleteItemUrl(ItemUrl instance);
    partial void InsertKeyword(Keyword instance);
    partial void UpdateKeyword(Keyword instance);
    partial void DeleteKeyword(Keyword instance);
    partial void InsertLocation(Location instance);
    partial void UpdateLocation(Location instance);
    partial void DeleteLocation(Location instance);
    partial void InsertNotificationSubscription(NotificationSubscription instance);
    partial void UpdateNotificationSubscription(NotificationSubscription instance);
    partial void DeleteNotificationSubscription(NotificationSubscription instance);
    partial void InsertO(O instance);
    partial void UpdateO(O instance);
    partial void DeleteO(O instance);
    partial void InsertPageEventDefinition(PageEventDefinition instance);
    partial void UpdatePageEventDefinition(PageEventDefinition instance);
    partial void DeletePageEventDefinition(PageEventDefinition instance);
    partial void InsertPageEvent(PageEvent instance);
    partial void UpdatePageEvent(PageEvent instance);
    partial void DeletePageEvent(PageEvent instance);
    partial void InsertPage(Page instance);
    partial void UpdatePage(Page instance);
    partial void DeletePage(Page instance);
    partial void InsertProfile(Profile instance);
    partial void UpdateProfile(Profile instance);
    partial void DeleteProfile(Profile instance);
    partial void InsertReferringSite(ReferringSite instance);
    partial void UpdateReferringSite(ReferringSite instance);
    partial void DeleteReferringSite(ReferringSite instance);
    partial void InsertScreen(Screen instance);
    partial void UpdateScreen(Screen instance);
    partial void DeleteScreen(Screen instance);
    partial void InsertStatus(Status instance);
    partial void UpdateStatus(Status instance);
    partial void DeleteStatus(Status instance);
    partial void InsertTestDefinition(TestDefinition instance);
    partial void UpdateTestDefinition(TestDefinition instance);
    partial void DeleteTestDefinition(TestDefinition instance);
    partial void InsertTrafficType(TrafficType instance);
    partial void UpdateTrafficType(TrafficType instance);
    partial void DeleteTrafficType(TrafficType instance);
    partial void InsertUserAgent(UserAgent instance);
    partial void UpdateUserAgent(UserAgent instance);
    partial void DeleteUserAgent(UserAgent instance);
    partial void InsertVisitorClassification(VisitorClassification instance);
    partial void UpdateVisitorClassification(VisitorClassification instance);
    partial void DeleteVisitorClassification(VisitorClassification instance);
    partial void InsertVisitor(Visitor instance);
    partial void UpdateVisitor(Visitor instance);
    partial void DeleteVisitor(Visitor instance);
    partial void InsertVisitorTag(VisitorTag instance);
    partial void UpdateVisitorTag(VisitorTag instance);
    partial void DeleteVisitorTag(VisitorTag instance);
    #endregion
		
		public AnalyticsDataContext() : 
				base(global::Sitecore.SharedSource.Analytics.Properties.Settings.Default.Sitecore_analyticsConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AnalyticsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AnalyticsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AnalyticsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AnalyticsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Automation> Automations
		{
			get
			{
				return this.GetTable<Automation>();
			}
		}
		
		public System.Data.Linq.Table<Visit> Visits
		{
			get
			{
				return this.GetTable<Visit>();
			}
		}
		
		public System.Data.Linq.Table<AutomationState> AutomationStates
		{
			get
			{
				return this.GetTable<AutomationState>();
			}
		}
		
		public System.Data.Linq.Table<Browser> Browsers
		{
			get
			{
				return this.GetTable<Browser>();
			}
		}
		
		public System.Data.Linq.Table<Cache_TrafficByDay> Cache_TrafficByDays
		{
			get
			{
				return this.GetTable<Cache_TrafficByDay>();
			}
		}
		
		public System.Data.Linq.Table<Cache_ValueBySource> Cache_ValueBySources
		{
			get
			{
				return this.GetTable<Cache_ValueBySource>();
			}
		}
		
		public System.Data.Linq.Table<Cache_VisitEvent> Cache_VisitEvents
		{
			get
			{
				return this.GetTable<Cache_VisitEvent>();
			}
		}
		
		public System.Data.Linq.Table<Cache_VisitorsByLocation> Cache_VisitorsByLocations
		{
			get
			{
				return this.GetTable<Cache_VisitorsByLocation>();
			}
		}
		
		public System.Data.Linq.Table<Campaign> Campaigns
		{
			get
			{
				return this.GetTable<Campaign>();
			}
		}
		
		public System.Data.Linq.Table<GeoIp> GeoIps
		{
			get
			{
				return this.GetTable<GeoIp>();
			}
		}
		
		public System.Data.Linq.Table<ItemUrl> ItemUrls
		{
			get
			{
				return this.GetTable<ItemUrl>();
			}
		}
		
		public System.Data.Linq.Table<Keyword> Keywords
		{
			get
			{
				return this.GetTable<Keyword>();
			}
		}
		
		public System.Data.Linq.Table<Location> Locations
		{
			get
			{
				return this.GetTable<Location>();
			}
		}
		
		public System.Data.Linq.Table<NotificationSubscription> NotificationSubscriptions
		{
			get
			{
				return this.GetTable<NotificationSubscription>();
			}
		}
		
		public System.Data.Linq.Table<O> Os
		{
			get
			{
				return this.GetTable<O>();
			}
		}
		
		public System.Data.Linq.Table<PageEventDefinition> PageEventDefinitions
		{
			get
			{
				return this.GetTable<PageEventDefinition>();
			}
		}
		
		public System.Data.Linq.Table<PageEvent> PageEvents
		{
			get
			{
				return this.GetTable<PageEvent>();
			}
		}
		
		public System.Data.Linq.Table<Page> Pages
		{
			get
			{
				return this.GetTable<Page>();
			}
		}
		
		public System.Data.Linq.Table<Profile> Profiles
		{
			get
			{
				return this.GetTable<Profile>();
			}
		}
		
		public System.Data.Linq.Table<ReferringSite> ReferringSites
		{
			get
			{
				return this.GetTable<ReferringSite>();
			}
		}
		
		public System.Data.Linq.Table<Screen> Screens
		{
			get
			{
				return this.GetTable<Screen>();
			}
		}
		
		public System.Data.Linq.Table<Status> Status
		{
			get
			{
				return this.GetTable<Status>();
			}
		}
		
		public System.Data.Linq.Table<TestDefinition> TestDefinitions
		{
			get
			{
				return this.GetTable<TestDefinition>();
			}
		}
		
		public System.Data.Linq.Table<TrafficType> TrafficTypes
		{
			get
			{
				return this.GetTable<TrafficType>();
			}
		}
		
		public System.Data.Linq.Table<UserAgent> UserAgents
		{
			get
			{
				return this.GetTable<UserAgent>();
			}
		}
		
		public System.Data.Linq.Table<VisitorClassification> VisitorClassifications
		{
			get
			{
				return this.GetTable<VisitorClassification>();
			}
		}
		
		public System.Data.Linq.Table<Visitor> Visitors
		{
			get
			{
				return this.GetTable<Visitor>();
			}
		}
		
		public System.Data.Linq.Table<VisitorTag> VisitorTags
		{
			get
			{
				return this.GetTable<VisitorTag>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fn_abc_hexadecimal", IsComposable=true)]
		public string fn_abc_hexadecimal([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarBinary(255)")] System.Data.Linq.Binary binvalue)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), binvalue).ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Automations")]
	public partial class Automation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _AutomationId;
		
		private string _AutomationName;
		
		private System.Nullable<System.Guid> _Campaignid;
		
		private System.Nullable<System.Guid> _IntegrationId;
		
		private string _IntegrationLabel;
		
		private bool _Suspended;
		
		private string _Data;
		
		private EntitySet<AutomationState> _AutomationStates;
		
		private EntityRef<Campaign> _Campaign;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAutomationIdChanging(System.Guid value);
    partial void OnAutomationIdChanged();
    partial void OnAutomationNameChanging(string value);
    partial void OnAutomationNameChanged();
    partial void OnCampaignidChanging(System.Nullable<System.Guid> value);
    partial void OnCampaignidChanged();
    partial void OnIntegrationIdChanging(System.Nullable<System.Guid> value);
    partial void OnIntegrationIdChanged();
    partial void OnIntegrationLabelChanging(string value);
    partial void OnIntegrationLabelChanged();
    partial void OnSuspendedChanging(bool value);
    partial void OnSuspendedChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    #endregion
		
		public Automation()
		{
			this._AutomationStates = new EntitySet<AutomationState>(new Action<AutomationState>(this.attach_AutomationStates), new Action<AutomationState>(this.detach_AutomationStates));
			this._Campaign = default(EntityRef<Campaign>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutomationId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid AutomationId
		{
			get
			{
				return this._AutomationId;
			}
			set
			{
				if ((this._AutomationId != value))
				{
					this.OnAutomationIdChanging(value);
					this.SendPropertyChanging();
					this._AutomationId = value;
					this.SendPropertyChanged("AutomationId");
					this.OnAutomationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutomationName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string AutomationName
		{
			get
			{
				return this._AutomationName;
			}
			set
			{
				if ((this._AutomationName != value))
				{
					this.OnAutomationNameChanging(value);
					this.SendPropertyChanging();
					this._AutomationName = value;
					this.SendPropertyChanged("AutomationName");
					this.OnAutomationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Campaignid", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Campaignid
		{
			get
			{
				return this._Campaignid;
			}
			set
			{
				if ((this._Campaignid != value))
				{
					if (this._Campaign.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampaignidChanging(value);
					this.SendPropertyChanging();
					this._Campaignid = value;
					this.SendPropertyChanged("Campaignid");
					this.OnCampaignidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntegrationId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IntegrationId
		{
			get
			{
				return this._IntegrationId;
			}
			set
			{
				if ((this._IntegrationId != value))
				{
					this.OnIntegrationIdChanging(value);
					this.SendPropertyChanging();
					this._IntegrationId = value;
					this.SendPropertyChanged("IntegrationId");
					this.OnIntegrationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntegrationLabel", DbType="NVarChar(100)")]
		public string IntegrationLabel
		{
			get
			{
				return this._IntegrationLabel;
			}
			set
			{
				if ((this._IntegrationLabel != value))
				{
					this.OnIntegrationLabelChanging(value);
					this.SendPropertyChanging();
					this._IntegrationLabel = value;
					this.SendPropertyChanged("IntegrationLabel");
					this.OnIntegrationLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Suspended", DbType="Bit NOT NULL")]
		public bool Suspended
		{
			get
			{
				return this._Suspended;
			}
			set
			{
				if ((this._Suspended != value))
				{
					this.OnSuspendedChanging(value);
					this.SendPropertyChanging();
					this._Suspended = value;
					this.SendPropertyChanged("Suspended");
					this.OnSuspendedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NVarChar(MAX)")]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Automation_AutomationState", Storage="_AutomationStates", ThisKey="AutomationId", OtherKey="AutomationId")]
		public EntitySet<AutomationState> AutomationStates
		{
			get
			{
				return this._AutomationStates;
			}
			set
			{
				this._AutomationStates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_Automation", Storage="_Campaign", ThisKey="Campaignid", OtherKey="CampaignId", IsForeignKey=true)]
		public Campaign Campaign
		{
			get
			{
				return this._Campaign.Entity;
			}
			set
			{
				Campaign previousValue = this._Campaign.Entity;
				if (((previousValue != value) 
							|| (this._Campaign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Campaign.Entity = null;
						previousValue.Automations.Remove(this);
					}
					this._Campaign.Entity = value;
					if ((value != null))
					{
						value.Automations.Add(this);
						this._Campaignid = value.CampaignId;
					}
					else
					{
						this._Campaignid = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Campaign");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AutomationStates(AutomationState entity)
		{
			this.SendPropertyChanging();
			entity.Automation = this;
		}
		
		private void detach_AutomationStates(AutomationState entity)
		{
			this.SendPropertyChanging();
			entity.Automation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Visits")]
	public partial class Visit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _VisitId;
		
		private System.Guid _VisitorId;
		
		private int _VisitorVisitIndex;
		
		private int _VisitPageCount;
		
		private System.DateTime _StartDateTime;
		
		private System.DateTime _EndDateTime;
		
		private int _TrafficType;
		
		private int _Value;
		
		private string _AspNetSessionId;
		
		private System.Guid _ReferringSiteId;
		
		private System.Guid _KeywordsId;
		
		private System.Guid _BrowserId;
		
		private System.Guid _UserAgentId;
		
		private System.Guid _OsId;
		
		private System.Guid _ScreenId;
		
		private System.Nullable<System.Guid> _CampaignId;
		
		private string _RDNS;
		
		private string _MultiSite;
		
		private System.Guid _LocationId;
		
		private System.Data.Linq.Binary _Ip;
		
		private string _BusinessName;
		
		private string _City;
		
		private string _PostalCode;
		
		private string _MetroCode;
		
		private string _AreaCode;
		
		private string _Region;
		
		private string _IspName;
		
		private string _Country;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private System.Nullable<System.Guid> _TestSetId;
		
		private System.Data.Linq.Binary _TestValues;
		
		private string _Referrer;
		
		private byte _State;
		
		private System.Nullable<System.DateTime> _StateChanged;
		
		private string _DeviceName;
		
		private string _Language;
		
		private long _rn;
		
		private EntitySet<PageEvent> _PageEvents;
		
		private EntitySet<Page> _Pages;
		
		private EntitySet<Profile> _Profiles;
		
		private EntityRef<Browser> _Browser;
		
		private EntityRef<Campaign> _Campaign;
		
		private EntityRef<GeoIp> _GeoIp;
		
		private EntityRef<Keyword> _Keyword;
		
		private EntityRef<Location> _Location;
		
		private EntityRef<O> _O;
		
		private EntityRef<ReferringSite> _ReferringSite;
		
		private EntityRef<Screen> _Screen;
		
		private EntityRef<TrafficType> _TrafficType1;
		
		private EntityRef<UserAgent> _UserAgent;
		
		private EntityRef<Visitor> _Visitor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVisitIdChanging(System.Guid value);
    partial void OnVisitIdChanged();
    partial void OnVisitorIdChanging(System.Guid value);
    partial void OnVisitorIdChanged();
    partial void OnVisitorVisitIndexChanging(int value);
    partial void OnVisitorVisitIndexChanged();
    partial void OnVisitPageCountChanging(int value);
    partial void OnVisitPageCountChanged();
    partial void OnStartDateTimeChanging(System.DateTime value);
    partial void OnStartDateTimeChanged();
    partial void OnEndDateTimeChanging(System.DateTime value);
    partial void OnEndDateTimeChanged();
    partial void OnTrafficTypeChanging(int value);
    partial void OnTrafficTypeChanged();
    partial void OnValueChanging(int value);
    partial void OnValueChanged();
    partial void OnAspNetSessionIdChanging(string value);
    partial void OnAspNetSessionIdChanged();
    partial void OnReferringSiteIdChanging(System.Guid value);
    partial void OnReferringSiteIdChanged();
    partial void OnKeywordsIdChanging(System.Guid value);
    partial void OnKeywordsIdChanged();
    partial void OnBrowserIdChanging(System.Guid value);
    partial void OnBrowserIdChanged();
    partial void OnUserAgentIdChanging(System.Guid value);
    partial void OnUserAgentIdChanged();
    partial void OnOsIdChanging(System.Guid value);
    partial void OnOsIdChanged();
    partial void OnScreenIdChanging(System.Guid value);
    partial void OnScreenIdChanged();
    partial void OnCampaignIdChanging(System.Nullable<System.Guid> value);
    partial void OnCampaignIdChanged();
    partial void OnRDNSChanging(string value);
    partial void OnRDNSChanged();
    partial void OnMultiSiteChanging(string value);
    partial void OnMultiSiteChanged();
    partial void OnLocationIdChanging(System.Guid value);
    partial void OnLocationIdChanged();
    partial void OnIpChanging(System.Data.Linq.Binary value);
    partial void OnIpChanged();
    partial void OnBusinessNameChanging(string value);
    partial void OnBusinessNameChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void OnMetroCodeChanging(string value);
    partial void OnMetroCodeChanged();
    partial void OnAreaCodeChanging(string value);
    partial void OnAreaCodeChanged();
    partial void OnRegionChanging(string value);
    partial void OnRegionChanged();
    partial void OnIspNameChanging(string value);
    partial void OnIspNameChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    partial void OnTestSetIdChanging(System.Nullable<System.Guid> value);
    partial void OnTestSetIdChanged();
    partial void OnTestValuesChanging(System.Data.Linq.Binary value);
    partial void OnTestValuesChanged();
    partial void OnReferrerChanging(string value);
    partial void OnReferrerChanged();
    partial void OnStateChanging(byte value);
    partial void OnStateChanged();
    partial void OnStateChangedChanging(System.Nullable<System.DateTime> value);
    partial void OnStateChangedChanged();
    partial void OnDeviceNameChanging(string value);
    partial void OnDeviceNameChanged();
    partial void OnLanguageChanging(string value);
    partial void OnLanguageChanged();
    partial void OnrnChanging(long value);
    partial void OnrnChanged();
    #endregion
		
		public Visit()
		{
			this._PageEvents = new EntitySet<PageEvent>(new Action<PageEvent>(this.attach_PageEvents), new Action<PageEvent>(this.detach_PageEvents));
			this._Pages = new EntitySet<Page>(new Action<Page>(this.attach_Pages), new Action<Page>(this.detach_Pages));
			this._Profiles = new EntitySet<Profile>(new Action<Profile>(this.attach_Profiles), new Action<Profile>(this.detach_Profiles));
			this._Browser = default(EntityRef<Browser>);
			this._Campaign = default(EntityRef<Campaign>);
			this._GeoIp = default(EntityRef<GeoIp>);
			this._Keyword = default(EntityRef<Keyword>);
			this._Location = default(EntityRef<Location>);
			this._O = default(EntityRef<O>);
			this._ReferringSite = default(EntityRef<ReferringSite>);
			this._Screen = default(EntityRef<Screen>);
			this._TrafficType1 = default(EntityRef<TrafficType>);
			this._UserAgent = default(EntityRef<UserAgent>);
			this._Visitor = default(EntityRef<Visitor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid VisitId
		{
			get
			{
				return this._VisitId;
			}
			set
			{
				if ((this._VisitId != value))
				{
					this.OnVisitIdChanging(value);
					this.SendPropertyChanging();
					this._VisitId = value;
					this.SendPropertyChanged("VisitId");
					this.OnVisitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitorId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VisitorId
		{
			get
			{
				return this._VisitorId;
			}
			set
			{
				if ((this._VisitorId != value))
				{
					if (this._Visitor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVisitorIdChanging(value);
					this.SendPropertyChanging();
					this._VisitorId = value;
					this.SendPropertyChanged("VisitorId");
					this.OnVisitorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitorVisitIndex", DbType="Int NOT NULL")]
		public int VisitorVisitIndex
		{
			get
			{
				return this._VisitorVisitIndex;
			}
			set
			{
				if ((this._VisitorVisitIndex != value))
				{
					this.OnVisitorVisitIndexChanging(value);
					this.SendPropertyChanging();
					this._VisitorVisitIndex = value;
					this.SendPropertyChanged("VisitorVisitIndex");
					this.OnVisitorVisitIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitPageCount", DbType="Int NOT NULL")]
		public int VisitPageCount
		{
			get
			{
				return this._VisitPageCount;
			}
			set
			{
				if ((this._VisitPageCount != value))
				{
					this.OnVisitPageCountChanging(value);
					this.SendPropertyChanging();
					this._VisitPageCount = value;
					this.SendPropertyChanged("VisitPageCount");
					this.OnVisitPageCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartDateTime
		{
			get
			{
				return this._StartDateTime;
			}
			set
			{
				if ((this._StartDateTime != value))
				{
					this.OnStartDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartDateTime = value;
					this.SendPropertyChanged("StartDateTime");
					this.OnStartDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EndDateTime
		{
			get
			{
				return this._EndDateTime;
			}
			set
			{
				if ((this._EndDateTime != value))
				{
					this.OnEndDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EndDateTime = value;
					this.SendPropertyChanged("EndDateTime");
					this.OnEndDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrafficType", DbType="Int NOT NULL")]
		public int TrafficType
		{
			get
			{
				return this._TrafficType;
			}
			set
			{
				if ((this._TrafficType != value))
				{
					if (this._TrafficType1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrafficTypeChanging(value);
					this.SendPropertyChanging();
					this._TrafficType = value;
					this.SendPropertyChanged("TrafficType");
					this.OnTrafficTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Int NOT NULL")]
		public int Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AspNetSessionId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AspNetSessionId
		{
			get
			{
				return this._AspNetSessionId;
			}
			set
			{
				if ((this._AspNetSessionId != value))
				{
					this.OnAspNetSessionIdChanging(value);
					this.SendPropertyChanging();
					this._AspNetSessionId = value;
					this.SendPropertyChanged("AspNetSessionId");
					this.OnAspNetSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferringSiteId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ReferringSiteId
		{
			get
			{
				return this._ReferringSiteId;
			}
			set
			{
				if ((this._ReferringSiteId != value))
				{
					if (this._ReferringSite.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReferringSiteIdChanging(value);
					this.SendPropertyChanging();
					this._ReferringSiteId = value;
					this.SendPropertyChanged("ReferringSiteId");
					this.OnReferringSiteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeywordsId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid KeywordsId
		{
			get
			{
				return this._KeywordsId;
			}
			set
			{
				if ((this._KeywordsId != value))
				{
					if (this._Keyword.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKeywordsIdChanging(value);
					this.SendPropertyChanging();
					this._KeywordsId = value;
					this.SendPropertyChanged("KeywordsId");
					this.OnKeywordsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrowserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid BrowserId
		{
			get
			{
				return this._BrowserId;
			}
			set
			{
				if ((this._BrowserId != value))
				{
					if (this._Browser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBrowserIdChanging(value);
					this.SendPropertyChanging();
					this._BrowserId = value;
					this.SendPropertyChanged("BrowserId");
					this.OnBrowserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAgentId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserAgentId
		{
			get
			{
				return this._UserAgentId;
			}
			set
			{
				if ((this._UserAgentId != value))
				{
					if (this._UserAgent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserAgentIdChanging(value);
					this.SendPropertyChanging();
					this._UserAgentId = value;
					this.SendPropertyChanged("UserAgentId");
					this.OnUserAgentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OsId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid OsId
		{
			get
			{
				return this._OsId;
			}
			set
			{
				if ((this._OsId != value))
				{
					if (this._O.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOsIdChanging(value);
					this.SendPropertyChanging();
					this._OsId = value;
					this.SendPropertyChanged("OsId");
					this.OnOsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScreenId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ScreenId
		{
			get
			{
				return this._ScreenId;
			}
			set
			{
				if ((this._ScreenId != value))
				{
					if (this._Screen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScreenIdChanging(value);
					this.SendPropertyChanging();
					this._ScreenId = value;
					this.SendPropertyChanged("ScreenId");
					this.OnScreenIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CampaignId
		{
			get
			{
				return this._CampaignId;
			}
			set
			{
				if ((this._CampaignId != value))
				{
					if (this._Campaign.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampaignIdChanging(value);
					this.SendPropertyChanging();
					this._CampaignId = value;
					this.SendPropertyChanged("CampaignId");
					this.OnCampaignIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RDNS", DbType="NVarChar(450) NOT NULL", CanBeNull=false)]
		public string RDNS
		{
			get
			{
				return this._RDNS;
			}
			set
			{
				if ((this._RDNS != value))
				{
					this.OnRDNSChanging(value);
					this.SendPropertyChanging();
					this._RDNS = value;
					this.SendPropertyChanged("RDNS");
					this.OnRDNSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MultiSite", DbType="NVarChar(450) NOT NULL", CanBeNull=false)]
		public string MultiSite
		{
			get
			{
				return this._MultiSite;
			}
			set
			{
				if ((this._MultiSite != value))
				{
					this.OnMultiSiteChanging(value);
					this.SendPropertyChanging();
					this._MultiSite = value;
					this.SendPropertyChanged("MultiSite");
					this.OnMultiSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid LocationId
		{
			get
			{
				return this._LocationId;
			}
			set
			{
				if ((this._LocationId != value))
				{
					if (this._Location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationIdChanging(value);
					this.SendPropertyChanging();
					this._LocationId = value;
					this.SendPropertyChanged("LocationId");
					this.OnLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ip", DbType="VarBinary(16) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Ip
		{
			get
			{
				return this._Ip;
			}
			set
			{
				if ((this._Ip != value))
				{
					if (this._GeoIp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIpChanging(value);
					this.SendPropertyChanging();
					this._Ip = value;
					this.SendPropertyChanged("Ip");
					this.OnIpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string BusinessName
		{
			get
			{
				return this._BusinessName;
			}
			set
			{
				if ((this._BusinessName != value))
				{
					this.OnBusinessNameChanging(value);
					this.SendPropertyChanging();
					this._BusinessName = value;
					this.SendPropertyChanged("BusinessName");
					this.OnBusinessNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetroCode", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string MetroCode
		{
			get
			{
				return this._MetroCode;
			}
			set
			{
				if ((this._MetroCode != value))
				{
					this.OnMetroCodeChanging(value);
					this.SendPropertyChanging();
					this._MetroCode = value;
					this.SendPropertyChanged("MetroCode");
					this.OnMetroCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaCode", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string AreaCode
		{
			get
			{
				return this._AreaCode;
			}
			set
			{
				if ((this._AreaCode != value))
				{
					this.OnAreaCodeChanging(value);
					this.SendPropertyChanging();
					this._AreaCode = value;
					this.SendPropertyChanged("AreaCode");
					this.OnAreaCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IspName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string IspName
		{
			get
			{
				return this._IspName;
			}
			set
			{
				if ((this._IspName != value))
				{
					this.OnIspNameChanging(value);
					this.SendPropertyChanging();
					this._IspName = value;
					this.SendPropertyChanged("IspName");
					this.OnIspNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestSetId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TestSetId
		{
			get
			{
				return this._TestSetId;
			}
			set
			{
				if ((this._TestSetId != value))
				{
					this.OnTestSetIdChanging(value);
					this.SendPropertyChanging();
					this._TestSetId = value;
					this.SendPropertyChanged("TestSetId");
					this.OnTestSetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestValues", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TestValues
		{
			get
			{
				return this._TestValues;
			}
			set
			{
				if ((this._TestValues != value))
				{
					this.OnTestValuesChanging(value);
					this.SendPropertyChanging();
					this._TestValues = value;
					this.SendPropertyChanged("TestValues");
					this.OnTestValuesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Referrer", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Referrer
		{
			get
			{
				return this._Referrer;
			}
			set
			{
				if ((this._Referrer != value))
				{
					this.OnReferrerChanging(value);
					this.SendPropertyChanging();
					this._Referrer = value;
					this.SendPropertyChanged("Referrer");
					this.OnReferrerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="TinyInt NOT NULL")]
		public byte State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateChanged", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> StateChanged
		{
			get
			{
				return this._StateChanged;
			}
			set
			{
				if ((this._StateChanged != value))
				{
					this.OnStateChangedChanging(value);
					this.SendPropertyChanging();
					this._StateChanged = value;
					this.SendPropertyChanged("StateChanged");
					this.OnStateChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DeviceName
		{
			get
			{
				return this._DeviceName;
			}
			set
			{
				if ((this._DeviceName != value))
				{
					this.OnDeviceNameChanging(value);
					this.SendPropertyChanging();
					this._DeviceName = value;
					this.SendPropertyChanged("DeviceName");
					this.OnDeviceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Language
		{
			get
			{
				return this._Language;
			}
			set
			{
				if ((this._Language != value))
				{
					this.OnLanguageChanging(value);
					this.SendPropertyChanging();
					this._Language = value;
					this.SendPropertyChanged("Language");
					this.OnLanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rn", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long rn
		{
			get
			{
				return this._rn;
			}
			set
			{
				if ((this._rn != value))
				{
					this.OnrnChanging(value);
					this.SendPropertyChanging();
					this._rn = value;
					this.SendPropertyChanged("rn");
					this.OnrnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visit_PageEvent", Storage="_PageEvents", ThisKey="VisitId", OtherKey="VisitId")]
		public EntitySet<PageEvent> PageEvents
		{
			get
			{
				return this._PageEvents;
			}
			set
			{
				this._PageEvents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visit_Page", Storage="_Pages", ThisKey="VisitId", OtherKey="VisitId")]
		public EntitySet<Page> Pages
		{
			get
			{
				return this._Pages;
			}
			set
			{
				this._Pages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visit_Profile", Storage="_Profiles", ThisKey="VisitId", OtherKey="VisitId")]
		public EntitySet<Profile> Profiles
		{
			get
			{
				return this._Profiles;
			}
			set
			{
				this._Profiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Browser_Visit", Storage="_Browser", ThisKey="BrowserId", OtherKey="BrowserId", IsForeignKey=true)]
		public Browser Browser
		{
			get
			{
				return this._Browser.Entity;
			}
			set
			{
				Browser previousValue = this._Browser.Entity;
				if (((previousValue != value) 
							|| (this._Browser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Browser.Entity = null;
						previousValue.Visits.Remove(this);
					}
					this._Browser.Entity = value;
					if ((value != null))
					{
						value.Visits.Add(this);
						this._BrowserId = value.BrowserId;
					}
					else
					{
						this._BrowserId = default(System.Guid);
					}
					this.SendPropertyChanged("Browser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_Visit", Storage="_Campaign", ThisKey="CampaignId", OtherKey="CampaignId", IsForeignKey=true)]
		public Campaign Campaign
		{
			get
			{
				return this._Campaign.Entity;
			}
			set
			{
				Campaign previousValue = this._Campaign.Entity;
				if (((previousValue != value) 
							|| (this._Campaign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Campaign.Entity = null;
						previousValue.Visits.Remove(this);
					}
					this._Campaign.Entity = value;
					if ((value != null))
					{
						value.Visits.Add(this);
						this._CampaignId = value.CampaignId;
					}
					else
					{
						this._CampaignId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Campaign");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeoIp_Visit", Storage="_GeoIp", ThisKey="Ip", OtherKey="Ip", IsForeignKey=true)]
		public GeoIp GeoIp
		{
			get
			{
				return this._GeoIp.Entity;
			}
			set
			{
				GeoIp previousValue = this._GeoIp.Entity;
				if (((previousValue != value) 
							|| (this._GeoIp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GeoIp.Entity = null;
						previousValue.Visits.Remove(this);
					}
					this._GeoIp.Entity = value;
					if ((value != null))
					{
						value.Visits.Add(this);
						this._Ip = value.Ip;
					}
					else
					{
						this._Ip = default(System.Data.Linq.Binary);
					}
					this.SendPropertyChanged("GeoIp");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Keyword_Visit", Storage="_Keyword", ThisKey="KeywordsId", OtherKey="KeywordsId", IsForeignKey=true)]
		public Keyword Keyword
		{
			get
			{
				return this._Keyword.Entity;
			}
			set
			{
				Keyword previousValue = this._Keyword.Entity;
				if (((previousValue != value) 
							|| (this._Keyword.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Keyword.Entity = null;
						previousValue.Visits.Remove(this);
					}
					this._Keyword.Entity = value;
					if ((value != null))
					{
						value.Visits.Add(this);
						this._KeywordsId = value.KeywordsId;
					}
					else
					{
						this._KeywordsId = default(System.Guid);
					}
					this.SendPropertyChanged("Keyword");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Visit", Storage="_Location", ThisKey="LocationId", OtherKey="LocationId", IsForeignKey=true)]
		public Location Location
		{
			get
			{
				return this._Location.Entity;
			}
			set
			{
				Location previousValue = this._Location.Entity;
				if (((previousValue != value) 
							|| (this._Location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Location.Entity = null;
						previousValue.Visits.Remove(this);
					}
					this._Location.Entity = value;
					if ((value != null))
					{
						value.Visits.Add(this);
						this._LocationId = value.LocationId;
					}
					else
					{
						this._LocationId = default(System.Guid);
					}
					this.SendPropertyChanged("Location");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="O_Visit", Storage="_O", ThisKey="OsId", OtherKey="OsId", IsForeignKey=true)]
		public O O
		{
			get
			{
				return this._O.Entity;
			}
			set
			{
				O previousValue = this._O.Entity;
				if (((previousValue != value) 
							|| (this._O.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._O.Entity = null;
						previousValue.Visits.Remove(this);
					}
					this._O.Entity = value;
					if ((value != null))
					{
						value.Visits.Add(this);
						this._OsId = value.OsId;
					}
					else
					{
						this._OsId = default(System.Guid);
					}
					this.SendPropertyChanged("O");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReferringSite_Visit", Storage="_ReferringSite", ThisKey="ReferringSiteId", OtherKey="ReferringSiteId", IsForeignKey=true)]
		public ReferringSite ReferringSite
		{
			get
			{
				return this._ReferringSite.Entity;
			}
			set
			{
				ReferringSite previousValue = this._ReferringSite.Entity;
				if (((previousValue != value) 
							|| (this._ReferringSite.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReferringSite.Entity = null;
						previousValue.Visits.Remove(this);
					}
					this._ReferringSite.Entity = value;
					if ((value != null))
					{
						value.Visits.Add(this);
						this._ReferringSiteId = value.ReferringSiteId;
					}
					else
					{
						this._ReferringSiteId = default(System.Guid);
					}
					this.SendPropertyChanged("ReferringSite");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Screen_Visit", Storage="_Screen", ThisKey="ScreenId", OtherKey="ScreenId", IsForeignKey=true)]
		public Screen Screen
		{
			get
			{
				return this._Screen.Entity;
			}
			set
			{
				Screen previousValue = this._Screen.Entity;
				if (((previousValue != value) 
							|| (this._Screen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Screen.Entity = null;
						previousValue.Visits.Remove(this);
					}
					this._Screen.Entity = value;
					if ((value != null))
					{
						value.Visits.Add(this);
						this._ScreenId = value.ScreenId;
					}
					else
					{
						this._ScreenId = default(System.Guid);
					}
					this.SendPropertyChanged("Screen");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrafficType_Visit", Storage="_TrafficType1", ThisKey="TrafficType", OtherKey="TrafficType1", IsForeignKey=true)]
		public TrafficType TrafficType1
		{
			get
			{
				return this._TrafficType1.Entity;
			}
			set
			{
				TrafficType previousValue = this._TrafficType1.Entity;
				if (((previousValue != value) 
							|| (this._TrafficType1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrafficType1.Entity = null;
						previousValue.Visits.Remove(this);
					}
					this._TrafficType1.Entity = value;
					if ((value != null))
					{
						value.Visits.Add(this);
						this._TrafficType = value.TrafficType1;
					}
					else
					{
						this._TrafficType = default(int);
					}
					this.SendPropertyChanged("TrafficType1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAgent_Visit", Storage="_UserAgent", ThisKey="UserAgentId", OtherKey="UserAgentId", IsForeignKey=true)]
		public UserAgent UserAgent
		{
			get
			{
				return this._UserAgent.Entity;
			}
			set
			{
				UserAgent previousValue = this._UserAgent.Entity;
				if (((previousValue != value) 
							|| (this._UserAgent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserAgent.Entity = null;
						previousValue.Visits.Remove(this);
					}
					this._UserAgent.Entity = value;
					if ((value != null))
					{
						value.Visits.Add(this);
						this._UserAgentId = value.UserAgentId;
					}
					else
					{
						this._UserAgentId = default(System.Guid);
					}
					this.SendPropertyChanged("UserAgent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visitor_Visit", Storage="_Visitor", ThisKey="VisitorId", OtherKey="VisitorId", IsForeignKey=true)]
		public Visitor Visitor
		{
			get
			{
				return this._Visitor.Entity;
			}
			set
			{
				Visitor previousValue = this._Visitor.Entity;
				if (((previousValue != value) 
							|| (this._Visitor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Visitor.Entity = null;
						previousValue.Visits.Remove(this);
					}
					this._Visitor.Entity = value;
					if ((value != null))
					{
						value.Visits.Add(this);
						this._VisitorId = value.VisitorId;
					}
					else
					{
						this._VisitorId = default(System.Guid);
					}
					this.SendPropertyChanged("Visitor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PageEvents(PageEvent entity)
		{
			this.SendPropertyChanging();
			entity.Visit = this;
		}
		
		private void detach_PageEvents(PageEvent entity)
		{
			this.SendPropertyChanging();
			entity.Visit = null;
		}
		
		private void attach_Pages(Page entity)
		{
			this.SendPropertyChanging();
			entity.Visit = this;
		}
		
		private void detach_Pages(Page entity)
		{
			this.SendPropertyChanging();
			entity.Visit = null;
		}
		
		private void attach_Profiles(Profile entity)
		{
			this.SendPropertyChanging();
			entity.Visit = this;
		}
		
		private void detach_Profiles(Profile entity)
		{
			this.SendPropertyChanging();
			entity.Visit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AutomationStates")]
	public partial class AutomationState : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _AutomationStateId;
		
		private System.Guid _AutomationId;
		
		private System.Nullable<System.Guid> _VisitorId;
		
		private string _UserName;
		
		private System.DateTime _CreatedDateTime;
		
		private System.DateTime _EntryDateTime;
		
		private System.Nullable<System.DateTime> _WakeupDateTime;
		
		private System.Nullable<System.Guid> _StateId;
		
		private string _StateName;
		
		private System.Nullable<System.Guid> _TestSetId;
		
		private System.Data.Linq.Binary _TestValues;
		
		private string _Data;
		
		private int _State;
		
		private int _DataCode;
		
		private System.Nullable<System.DateTime> _LastAccessedDateTime;
		
		private long _rn;
		
		private EntityRef<Automation> _Automation;
		
		private EntityRef<Visitor> _Visitor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAutomationStateIdChanging(System.Guid value);
    partial void OnAutomationStateIdChanged();
    partial void OnAutomationIdChanging(System.Guid value);
    partial void OnAutomationIdChanged();
    partial void OnVisitorIdChanging(System.Nullable<System.Guid> value);
    partial void OnVisitorIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnEntryDateTimeChanging(System.DateTime value);
    partial void OnEntryDateTimeChanged();
    partial void OnWakeupDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnWakeupDateTimeChanged();
    partial void OnStateIdChanging(System.Nullable<System.Guid> value);
    partial void OnStateIdChanged();
    partial void OnStateNameChanging(string value);
    partial void OnStateNameChanged();
    partial void OnTestSetIdChanging(System.Nullable<System.Guid> value);
    partial void OnTestSetIdChanged();
    partial void OnTestValuesChanging(System.Data.Linq.Binary value);
    partial void OnTestValuesChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    partial void OnStateChanging(int value);
    partial void OnStateChanged();
    partial void OnDataCodeChanging(int value);
    partial void OnDataCodeChanged();
    partial void OnLastAccessedDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastAccessedDateTimeChanged();
    partial void OnrnChanging(long value);
    partial void OnrnChanged();
    #endregion
		
		public AutomationState()
		{
			this._Automation = default(EntityRef<Automation>);
			this._Visitor = default(EntityRef<Visitor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutomationStateId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid AutomationStateId
		{
			get
			{
				return this._AutomationStateId;
			}
			set
			{
				if ((this._AutomationStateId != value))
				{
					this.OnAutomationStateIdChanging(value);
					this.SendPropertyChanging();
					this._AutomationStateId = value;
					this.SendPropertyChanged("AutomationStateId");
					this.OnAutomationStateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutomationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AutomationId
		{
			get
			{
				return this._AutomationId;
			}
			set
			{
				if ((this._AutomationId != value))
				{
					if (this._Automation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAutomationIdChanging(value);
					this.SendPropertyChanging();
					this._AutomationId = value;
					this.SendPropertyChanged("AutomationId");
					this.OnAutomationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitorId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VisitorId
		{
			get
			{
				return this._VisitorId;
			}
			set
			{
				if ((this._VisitorId != value))
				{
					if (this._Visitor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVisitorIdChanging(value);
					this.SendPropertyChanging();
					this._VisitorId = value;
					this.SendPropertyChanged("VisitorId");
					this.OnVisitorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EntryDateTime
		{
			get
			{
				return this._EntryDateTime;
			}
			set
			{
				if ((this._EntryDateTime != value))
				{
					this.OnEntryDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EntryDateTime = value;
					this.SendPropertyChanged("EntryDateTime");
					this.OnEntryDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WakeupDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> WakeupDateTime
		{
			get
			{
				return this._WakeupDateTime;
			}
			set
			{
				if ((this._WakeupDateTime != value))
				{
					this.OnWakeupDateTimeChanging(value);
					this.SendPropertyChanging();
					this._WakeupDateTime = value;
					this.SendPropertyChanged("WakeupDateTime");
					this.OnWakeupDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> StateId
		{
			get
			{
				return this._StateId;
			}
			set
			{
				if ((this._StateId != value))
				{
					this.OnStateIdChanging(value);
					this.SendPropertyChanging();
					this._StateId = value;
					this.SendPropertyChanged("StateId");
					this.OnStateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateName", DbType="NVarChar(100)")]
		public string StateName
		{
			get
			{
				return this._StateName;
			}
			set
			{
				if ((this._StateName != value))
				{
					this.OnStateNameChanging(value);
					this.SendPropertyChanging();
					this._StateName = value;
					this.SendPropertyChanged("StateName");
					this.OnStateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestSetId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TestSetId
		{
			get
			{
				return this._TestSetId;
			}
			set
			{
				if ((this._TestSetId != value))
				{
					this.OnTestSetIdChanging(value);
					this.SendPropertyChanging();
					this._TestSetId = value;
					this.SendPropertyChanged("TestSetId");
					this.OnTestSetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestValues", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TestValues
		{
			get
			{
				return this._TestValues;
			}
			set
			{
				if ((this._TestValues != value))
				{
					this.OnTestValuesChanging(value);
					this.SendPropertyChanging();
					this._TestValues = value;
					this.SendPropertyChanged("TestValues");
					this.OnTestValuesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Int NOT NULL")]
		public int State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataCode", DbType="Int NOT NULL")]
		public int DataCode
		{
			get
			{
				return this._DataCode;
			}
			set
			{
				if ((this._DataCode != value))
				{
					this.OnDataCodeChanging(value);
					this.SendPropertyChanging();
					this._DataCode = value;
					this.SendPropertyChanged("DataCode");
					this.OnDataCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastAccessedDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastAccessedDateTime
		{
			get
			{
				return this._LastAccessedDateTime;
			}
			set
			{
				if ((this._LastAccessedDateTime != value))
				{
					this.OnLastAccessedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastAccessedDateTime = value;
					this.SendPropertyChanged("LastAccessedDateTime");
					this.OnLastAccessedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rn", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long rn
		{
			get
			{
				return this._rn;
			}
			set
			{
				if ((this._rn != value))
				{
					this.OnrnChanging(value);
					this.SendPropertyChanging();
					this._rn = value;
					this.SendPropertyChanged("rn");
					this.OnrnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Automation_AutomationState", Storage="_Automation", ThisKey="AutomationId", OtherKey="AutomationId", IsForeignKey=true)]
		public Automation Automation
		{
			get
			{
				return this._Automation.Entity;
			}
			set
			{
				Automation previousValue = this._Automation.Entity;
				if (((previousValue != value) 
							|| (this._Automation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Automation.Entity = null;
						previousValue.AutomationStates.Remove(this);
					}
					this._Automation.Entity = value;
					if ((value != null))
					{
						value.AutomationStates.Add(this);
						this._AutomationId = value.AutomationId;
					}
					else
					{
						this._AutomationId = default(System.Guid);
					}
					this.SendPropertyChanged("Automation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visitor_AutomationState", Storage="_Visitor", ThisKey="VisitorId", OtherKey="VisitorId", IsForeignKey=true)]
		public Visitor Visitor
		{
			get
			{
				return this._Visitor.Entity;
			}
			set
			{
				Visitor previousValue = this._Visitor.Entity;
				if (((previousValue != value) 
							|| (this._Visitor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Visitor.Entity = null;
						previousValue.AutomationStates.Remove(this);
					}
					this._Visitor.Entity = value;
					if ((value != null))
					{
						value.AutomationStates.Add(this);
						this._VisitorId = value.VisitorId;
					}
					else
					{
						this._VisitorId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Visitor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Browsers")]
	public partial class Browser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _BrowserId;
		
		private string _MajorName;
		
		private string _MinorName;
		
		private string _Version;
		
		private EntitySet<Visit> _Visits;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBrowserIdChanging(System.Guid value);
    partial void OnBrowserIdChanged();
    partial void OnMajorNameChanging(string value);
    partial void OnMajorNameChanged();
    partial void OnMinorNameChanging(string value);
    partial void OnMinorNameChanged();
    partial void OnVersionChanging(string value);
    partial void OnVersionChanged();
    #endregion
		
		public Browser()
		{
			this._Visits = new EntitySet<Visit>(new Action<Visit>(this.attach_Visits), new Action<Visit>(this.detach_Visits));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrowserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid BrowserId
		{
			get
			{
				return this._BrowserId;
			}
			set
			{
				if ((this._BrowserId != value))
				{
					this.OnBrowserIdChanging(value);
					this.SendPropertyChanging();
					this._BrowserId = value;
					this.SendPropertyChanged("BrowserId");
					this.OnBrowserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MajorName
		{
			get
			{
				return this._MajorName;
			}
			set
			{
				if ((this._MajorName != value))
				{
					this.OnMajorNameChanging(value);
					this.SendPropertyChanging();
					this._MajorName = value;
					this.SendPropertyChanged("MajorName");
					this.OnMajorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinorName", DbType="NVarChar(50)")]
		public string MinorName
		{
			get
			{
				return this._MinorName;
			}
			set
			{
				if ((this._MinorName != value))
				{
					this.OnMinorNameChanging(value);
					this.SendPropertyChanging();
					this._MinorName = value;
					this.SendPropertyChanged("MinorName");
					this.OnMinorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Browser_Visit", Storage="_Visits", ThisKey="BrowserId", OtherKey="BrowserId")]
		public EntitySet<Visit> Visits
		{
			get
			{
				return this._Visits;
			}
			set
			{
				this._Visits.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Visits(Visit entity)
		{
			this.SendPropertyChanging();
			entity.Browser = this;
		}
		
		private void detach_Visits(Visit entity)
		{
			this.SendPropertyChanging();
			entity.Browser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cache_TrafficByDay")]
	public partial class Cache_TrafficByDay : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Date;
		
		private string _Month;
		
		private int _TrafficType;
		
		private System.Nullable<System.Guid> _CampaignId;
		
		private System.Guid _ItemId;
		
		private string _Url;
		
		private System.Guid _KeywordsId;
		
		private string _Keywords;
		
		private System.Guid _ReferringSiteId;
		
		private string _ReferringSite;
		
		private string _Multisite;
		
		private string _DeviceName;
		
		private string _Language;
		
		private int _FirstVisit;
		
		private System.Nullable<int> _Visits;
		
		private System.Nullable<int> _Value;
		
		private long _rn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnMonthChanging(string value);
    partial void OnMonthChanged();
    partial void OnTrafficTypeChanging(int value);
    partial void OnTrafficTypeChanged();
    partial void OnCampaignIdChanging(System.Nullable<System.Guid> value);
    partial void OnCampaignIdChanged();
    partial void OnItemIdChanging(System.Guid value);
    partial void OnItemIdChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnKeywordsIdChanging(System.Guid value);
    partial void OnKeywordsIdChanged();
    partial void OnKeywordsChanging(string value);
    partial void OnKeywordsChanged();
    partial void OnReferringSiteIdChanging(System.Guid value);
    partial void OnReferringSiteIdChanged();
    partial void OnReferringSiteChanging(string value);
    partial void OnReferringSiteChanged();
    partial void OnMultisiteChanging(string value);
    partial void OnMultisiteChanged();
    partial void OnDeviceNameChanging(string value);
    partial void OnDeviceNameChanged();
    partial void OnLanguageChanging(string value);
    partial void OnLanguageChanged();
    partial void OnFirstVisitChanging(int value);
    partial void OnFirstVisitChanged();
    partial void OnVisitsChanging(System.Nullable<int> value);
    partial void OnVisitsChanged();
    partial void OnValueChanging(System.Nullable<int> value);
    partial void OnValueChanged();
    partial void OnrnChanging(long value);
    partial void OnrnChanged();
    #endregion
		
		public Cache_TrafficByDay()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Char(8)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="Char(8)")]
		public string Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrafficType", DbType="Int NOT NULL")]
		public int TrafficType
		{
			get
			{
				return this._TrafficType;
			}
			set
			{
				if ((this._TrafficType != value))
				{
					this.OnTrafficTypeChanging(value);
					this.SendPropertyChanging();
					this._TrafficType = value;
					this.SendPropertyChanged("TrafficType");
					this.OnTrafficTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CampaignId
		{
			get
			{
				return this._CampaignId;
			}
			set
			{
				if ((this._CampaignId != value))
				{
					this.OnCampaignIdChanging(value);
					this.SendPropertyChanging();
					this._CampaignId = value;
					this.SendPropertyChanged("CampaignId");
					this.OnCampaignIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(800)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeywordsId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid KeywordsId
		{
			get
			{
				return this._KeywordsId;
			}
			set
			{
				if ((this._KeywordsId != value))
				{
					this.OnKeywordsIdChanging(value);
					this.SendPropertyChanging();
					this._KeywordsId = value;
					this.SendPropertyChanged("KeywordsId");
					this.OnKeywordsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Keywords", DbType="NVarChar(400)")]
		public string Keywords
		{
			get
			{
				return this._Keywords;
			}
			set
			{
				if ((this._Keywords != value))
				{
					this.OnKeywordsChanging(value);
					this.SendPropertyChanging();
					this._Keywords = value;
					this.SendPropertyChanged("Keywords");
					this.OnKeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferringSiteId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ReferringSiteId
		{
			get
			{
				return this._ReferringSiteId;
			}
			set
			{
				if ((this._ReferringSiteId != value))
				{
					this.OnReferringSiteIdChanging(value);
					this.SendPropertyChanging();
					this._ReferringSiteId = value;
					this.SendPropertyChanged("ReferringSiteId");
					this.OnReferringSiteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferringSite", DbType="VarChar(100)")]
		public string ReferringSite
		{
			get
			{
				return this._ReferringSite;
			}
			set
			{
				if ((this._ReferringSite != value))
				{
					this.OnReferringSiteChanging(value);
					this.SendPropertyChanging();
					this._ReferringSite = value;
					this.SendPropertyChanged("ReferringSite");
					this.OnReferringSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Multisite", DbType="NVarChar(450)")]
		public string Multisite
		{
			get
			{
				return this._Multisite;
			}
			set
			{
				if ((this._Multisite != value))
				{
					this.OnMultisiteChanging(value);
					this.SendPropertyChanging();
					this._Multisite = value;
					this.SendPropertyChanged("Multisite");
					this.OnMultisiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceName", DbType="NVarChar(100)")]
		public string DeviceName
		{
			get
			{
				return this._DeviceName;
			}
			set
			{
				if ((this._DeviceName != value))
				{
					this.OnDeviceNameChanging(value);
					this.SendPropertyChanging();
					this._DeviceName = value;
					this.SendPropertyChanged("DeviceName");
					this.OnDeviceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language", DbType="NVarChar(50)")]
		public string Language
		{
			get
			{
				return this._Language;
			}
			set
			{
				if ((this._Language != value))
				{
					this.OnLanguageChanging(value);
					this.SendPropertyChanging();
					this._Language = value;
					this.SendPropertyChanged("Language");
					this.OnLanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstVisit", DbType="Int NOT NULL")]
		public int FirstVisit
		{
			get
			{
				return this._FirstVisit;
			}
			set
			{
				if ((this._FirstVisit != value))
				{
					this.OnFirstVisitChanging(value);
					this.SendPropertyChanging();
					this._FirstVisit = value;
					this.SendPropertyChanged("FirstVisit");
					this.OnFirstVisitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visits", DbType="Int")]
		public System.Nullable<int> Visits
		{
			get
			{
				return this._Visits;
			}
			set
			{
				if ((this._Visits != value))
				{
					this.OnVisitsChanging(value);
					this.SendPropertyChanging();
					this._Visits = value;
					this.SendPropertyChanged("Visits");
					this.OnVisitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Int")]
		public System.Nullable<int> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rn", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long rn
		{
			get
			{
				return this._rn;
			}
			set
			{
				if ((this._rn != value))
				{
					this.OnrnChanging(value);
					this.SendPropertyChanging();
					this._rn = value;
					this.SendPropertyChanged("rn");
					this.OnrnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cache_ValueBySource")]
	public partial class Cache_ValueBySource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Date;
		
		private int _TrafficType;
		
		private string _Multisite;
		
		private string _DeviceName;
		
		private string _Language;
		
		private System.Nullable<int> _Visits;
		
		private System.Nullable<int> _Value;
		
		private System.Nullable<int> _FirstVisitValue;
		
		private System.Nullable<long> _Visitors;
		
		private long _rn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTrafficTypeChanging(int value);
    partial void OnTrafficTypeChanged();
    partial void OnMultisiteChanging(string value);
    partial void OnMultisiteChanged();
    partial void OnDeviceNameChanging(string value);
    partial void OnDeviceNameChanged();
    partial void OnLanguageChanging(string value);
    partial void OnLanguageChanged();
    partial void OnVisitsChanging(System.Nullable<int> value);
    partial void OnVisitsChanged();
    partial void OnValueChanging(System.Nullable<int> value);
    partial void OnValueChanged();
    partial void OnFirstVisitValueChanging(System.Nullable<int> value);
    partial void OnFirstVisitValueChanged();
    partial void OnVisitorsChanging(System.Nullable<long> value);
    partial void OnVisitorsChanged();
    partial void OnrnChanging(long value);
    partial void OnrnChanged();
    #endregion
		
		public Cache_ValueBySource()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Char(8)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrafficType", DbType="Int NOT NULL")]
		public int TrafficType
		{
			get
			{
				return this._TrafficType;
			}
			set
			{
				if ((this._TrafficType != value))
				{
					this.OnTrafficTypeChanging(value);
					this.SendPropertyChanging();
					this._TrafficType = value;
					this.SendPropertyChanged("TrafficType");
					this.OnTrafficTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Multisite", DbType="NVarChar(450)")]
		public string Multisite
		{
			get
			{
				return this._Multisite;
			}
			set
			{
				if ((this._Multisite != value))
				{
					this.OnMultisiteChanging(value);
					this.SendPropertyChanging();
					this._Multisite = value;
					this.SendPropertyChanged("Multisite");
					this.OnMultisiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceName", DbType="NVarChar(100)")]
		public string DeviceName
		{
			get
			{
				return this._DeviceName;
			}
			set
			{
				if ((this._DeviceName != value))
				{
					this.OnDeviceNameChanging(value);
					this.SendPropertyChanging();
					this._DeviceName = value;
					this.SendPropertyChanged("DeviceName");
					this.OnDeviceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language", DbType="NVarChar(50)")]
		public string Language
		{
			get
			{
				return this._Language;
			}
			set
			{
				if ((this._Language != value))
				{
					this.OnLanguageChanging(value);
					this.SendPropertyChanging();
					this._Language = value;
					this.SendPropertyChanged("Language");
					this.OnLanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visits", DbType="Int")]
		public System.Nullable<int> Visits
		{
			get
			{
				return this._Visits;
			}
			set
			{
				if ((this._Visits != value))
				{
					this.OnVisitsChanging(value);
					this.SendPropertyChanging();
					this._Visits = value;
					this.SendPropertyChanged("Visits");
					this.OnVisitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Int")]
		public System.Nullable<int> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstVisitValue", DbType="Int")]
		public System.Nullable<int> FirstVisitValue
		{
			get
			{
				return this._FirstVisitValue;
			}
			set
			{
				if ((this._FirstVisitValue != value))
				{
					this.OnFirstVisitValueChanging(value);
					this.SendPropertyChanging();
					this._FirstVisitValue = value;
					this.SendPropertyChanged("FirstVisitValue");
					this.OnFirstVisitValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visitors", DbType="BigInt")]
		public System.Nullable<long> Visitors
		{
			get
			{
				return this._Visitors;
			}
			set
			{
				if ((this._Visitors != value))
				{
					this.OnVisitorsChanging(value);
					this.SendPropertyChanging();
					this._Visitors = value;
					this.SendPropertyChanged("Visitors");
					this.OnVisitorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rn", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long rn
		{
			get
			{
				return this._rn;
			}
			set
			{
				if ((this._rn != value))
				{
					this.OnrnChanging(value);
					this.SendPropertyChanging();
					this._rn = value;
					this.SendPropertyChanged("rn");
					this.OnrnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cache_VisitEvents")]
	public partial class Cache_VisitEvent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Date;
		
		private string _Month;
		
		private System.Guid _VisitId;
		
		private int _TrafficType;
		
		private System.Nullable<System.Guid> _CampaignId;
		
		private string _Multisite;
		
		private string _DeviceName;
		
		private string _Language;
		
		private int _Value;
		
		private System.Guid _PageEventDefinitionId;
		
		private string _PageEventName;
		
		private bool _IsGoal;
		
		private System.Guid _ItemId;
		
		private System.Guid _EventItemId;
		
		private string _DataKey;
		
		private System.Nullable<int> _NumberOfEvents;
		
		private long _rn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnMonthChanging(string value);
    partial void OnMonthChanged();
    partial void OnVisitIdChanging(System.Guid value);
    partial void OnVisitIdChanged();
    partial void OnTrafficTypeChanging(int value);
    partial void OnTrafficTypeChanged();
    partial void OnCampaignIdChanging(System.Nullable<System.Guid> value);
    partial void OnCampaignIdChanged();
    partial void OnMultisiteChanging(string value);
    partial void OnMultisiteChanged();
    partial void OnDeviceNameChanging(string value);
    partial void OnDeviceNameChanged();
    partial void OnLanguageChanging(string value);
    partial void OnLanguageChanged();
    partial void OnValueChanging(int value);
    partial void OnValueChanged();
    partial void OnPageEventDefinitionIdChanging(System.Guid value);
    partial void OnPageEventDefinitionIdChanged();
    partial void OnPageEventNameChanging(string value);
    partial void OnPageEventNameChanged();
    partial void OnIsGoalChanging(bool value);
    partial void OnIsGoalChanged();
    partial void OnItemIdChanging(System.Guid value);
    partial void OnItemIdChanged();
    partial void OnEventItemIdChanging(System.Guid value);
    partial void OnEventItemIdChanged();
    partial void OnDataKeyChanging(string value);
    partial void OnDataKeyChanged();
    partial void OnNumberOfEventsChanging(System.Nullable<int> value);
    partial void OnNumberOfEventsChanged();
    partial void OnrnChanging(long value);
    partial void OnrnChanged();
    #endregion
		
		public Cache_VisitEvent()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Char(8)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="Char(8)")]
		public string Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VisitId
		{
			get
			{
				return this._VisitId;
			}
			set
			{
				if ((this._VisitId != value))
				{
					this.OnVisitIdChanging(value);
					this.SendPropertyChanging();
					this._VisitId = value;
					this.SendPropertyChanged("VisitId");
					this.OnVisitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrafficType", DbType="Int NOT NULL")]
		public int TrafficType
		{
			get
			{
				return this._TrafficType;
			}
			set
			{
				if ((this._TrafficType != value))
				{
					this.OnTrafficTypeChanging(value);
					this.SendPropertyChanging();
					this._TrafficType = value;
					this.SendPropertyChanged("TrafficType");
					this.OnTrafficTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CampaignId
		{
			get
			{
				return this._CampaignId;
			}
			set
			{
				if ((this._CampaignId != value))
				{
					this.OnCampaignIdChanging(value);
					this.SendPropertyChanging();
					this._CampaignId = value;
					this.SendPropertyChanged("CampaignId");
					this.OnCampaignIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Multisite", DbType="NVarChar(450)")]
		public string Multisite
		{
			get
			{
				return this._Multisite;
			}
			set
			{
				if ((this._Multisite != value))
				{
					this.OnMultisiteChanging(value);
					this.SendPropertyChanging();
					this._Multisite = value;
					this.SendPropertyChanged("Multisite");
					this.OnMultisiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceName", DbType="NVarChar(100)")]
		public string DeviceName
		{
			get
			{
				return this._DeviceName;
			}
			set
			{
				if ((this._DeviceName != value))
				{
					this.OnDeviceNameChanging(value);
					this.SendPropertyChanging();
					this._DeviceName = value;
					this.SendPropertyChanged("DeviceName");
					this.OnDeviceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language", DbType="NVarChar(50)")]
		public string Language
		{
			get
			{
				return this._Language;
			}
			set
			{
				if ((this._Language != value))
				{
					this.OnLanguageChanging(value);
					this.SendPropertyChanging();
					this._Language = value;
					this.SendPropertyChanged("Language");
					this.OnLanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Int NOT NULL")]
		public int Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageEventDefinitionId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PageEventDefinitionId
		{
			get
			{
				return this._PageEventDefinitionId;
			}
			set
			{
				if ((this._PageEventDefinitionId != value))
				{
					this.OnPageEventDefinitionIdChanging(value);
					this.SendPropertyChanging();
					this._PageEventDefinitionId = value;
					this.SendPropertyChanged("PageEventDefinitionId");
					this.OnPageEventDefinitionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageEventName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string PageEventName
		{
			get
			{
				return this._PageEventName;
			}
			set
			{
				if ((this._PageEventName != value))
				{
					this.OnPageEventNameChanging(value);
					this.SendPropertyChanging();
					this._PageEventName = value;
					this.SendPropertyChanged("PageEventName");
					this.OnPageEventNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsGoal", DbType="Bit NOT NULL")]
		public bool IsGoal
		{
			get
			{
				return this._IsGoal;
			}
			set
			{
				if ((this._IsGoal != value))
				{
					this.OnIsGoalChanging(value);
					this.SendPropertyChanging();
					this._IsGoal = value;
					this.SendPropertyChanged("IsGoal");
					this.OnIsGoalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventItemId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid EventItemId
		{
			get
			{
				return this._EventItemId;
			}
			set
			{
				if ((this._EventItemId != value))
				{
					this.OnEventItemIdChanging(value);
					this.SendPropertyChanging();
					this._EventItemId = value;
					this.SendPropertyChanged("EventItemId");
					this.OnEventItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataKey", DbType="VarChar(100)")]
		public string DataKey
		{
			get
			{
				return this._DataKey;
			}
			set
			{
				if ((this._DataKey != value))
				{
					this.OnDataKeyChanging(value);
					this.SendPropertyChanging();
					this._DataKey = value;
					this.SendPropertyChanged("DataKey");
					this.OnDataKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfEvents", DbType="Int")]
		public System.Nullable<int> NumberOfEvents
		{
			get
			{
				return this._NumberOfEvents;
			}
			set
			{
				if ((this._NumberOfEvents != value))
				{
					this.OnNumberOfEventsChanging(value);
					this.SendPropertyChanging();
					this._NumberOfEvents = value;
					this.SendPropertyChanged("NumberOfEvents");
					this.OnNumberOfEventsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rn", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long rn
		{
			get
			{
				return this._rn;
			}
			set
			{
				if ((this._rn != value))
				{
					this.OnrnChanging(value);
					this.SendPropertyChanging();
					this._rn = value;
					this.SendPropertyChanged("rn");
					this.OnrnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cache_VisitorsByLocation")]
	public partial class Cache_VisitorsByLocation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Date;
		
		private int _VisitorClassification;
		
		private System.Guid _LocationId;
		
		private string _Country;
		
		private string _Region;
		
		private System.Guid _VisitorId;
		
		private System.Nullable<long> _Visits;
		
		private System.Nullable<int> _Value;
		
		private long _rn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnVisitorClassificationChanging(int value);
    partial void OnVisitorClassificationChanged();
    partial void OnLocationIdChanging(System.Guid value);
    partial void OnLocationIdChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnRegionChanging(string value);
    partial void OnRegionChanged();
    partial void OnVisitorIdChanging(System.Guid value);
    partial void OnVisitorIdChanged();
    partial void OnVisitsChanging(System.Nullable<long> value);
    partial void OnVisitsChanged();
    partial void OnValueChanging(System.Nullable<int> value);
    partial void OnValueChanged();
    partial void OnrnChanging(long value);
    partial void OnrnChanged();
    #endregion
		
		public Cache_VisitorsByLocation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Char(8)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitorClassification", DbType="Int NOT NULL")]
		public int VisitorClassification
		{
			get
			{
				return this._VisitorClassification;
			}
			set
			{
				if ((this._VisitorClassification != value))
				{
					this.OnVisitorClassificationChanging(value);
					this.SendPropertyChanging();
					this._VisitorClassification = value;
					this.SendPropertyChanged("VisitorClassification");
					this.OnVisitorClassificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid LocationId
		{
			get
			{
				return this._LocationId;
			}
			set
			{
				if ((this._LocationId != value))
				{
					this.OnLocationIdChanging(value);
					this.SendPropertyChanging();
					this._LocationId = value;
					this.SendPropertyChanged("LocationId");
					this.OnLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitorId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VisitorId
		{
			get
			{
				return this._VisitorId;
			}
			set
			{
				if ((this._VisitorId != value))
				{
					this.OnVisitorIdChanging(value);
					this.SendPropertyChanging();
					this._VisitorId = value;
					this.SendPropertyChanged("VisitorId");
					this.OnVisitorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visits", DbType="BigInt")]
		public System.Nullable<long> Visits
		{
			get
			{
				return this._Visits;
			}
			set
			{
				if ((this._Visits != value))
				{
					this.OnVisitsChanging(value);
					this.SendPropertyChanging();
					this._Visits = value;
					this.SendPropertyChanged("Visits");
					this.OnVisitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Int")]
		public System.Nullable<int> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rn", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long rn
		{
			get
			{
				return this._rn;
			}
			set
			{
				if ((this._rn != value))
				{
					this.OnrnChanging(value);
					this.SendPropertyChanging();
					this._rn = value;
					this.SendPropertyChanged("rn");
					this.OnrnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Campaigns")]
	public partial class Campaign : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CampaignId;
		
		private string _CampaignName;
		
		private int _Cost;
		
		private int _CostPerClick;
		
		private int _CostPerDay;
		
		private int _CostBase;
		
		private string _Category1Label;
		
		private System.Nullable<System.Guid> _Category1Id;
		
		private string _Category2Label;
		
		private System.Nullable<System.Guid> _Category2Id;
		
		private string _Category3Label;
		
		private System.Nullable<System.Guid> _Category3Id;
		
		private string _IntegrationLabel;
		
		private System.Nullable<System.Guid> _IntegrationId;
		
		private bool _IsActive;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private string _Data;
		
		private EntitySet<Automation> _Automations;
		
		private EntitySet<Visit> _Visits;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCampaignIdChanging(System.Guid value);
    partial void OnCampaignIdChanged();
    partial void OnCampaignNameChanging(string value);
    partial void OnCampaignNameChanged();
    partial void OnCostChanging(int value);
    partial void OnCostChanged();
    partial void OnCostPerClickChanging(int value);
    partial void OnCostPerClickChanged();
    partial void OnCostPerDayChanging(int value);
    partial void OnCostPerDayChanged();
    partial void OnCostBaseChanging(int value);
    partial void OnCostBaseChanged();
    partial void OnCategory1LabelChanging(string value);
    partial void OnCategory1LabelChanged();
    partial void OnCategory1IdChanging(System.Nullable<System.Guid> value);
    partial void OnCategory1IdChanged();
    partial void OnCategory2LabelChanging(string value);
    partial void OnCategory2LabelChanged();
    partial void OnCategory2IdChanging(System.Nullable<System.Guid> value);
    partial void OnCategory2IdChanged();
    partial void OnCategory3LabelChanging(string value);
    partial void OnCategory3LabelChanged();
    partial void OnCategory3IdChanging(System.Nullable<System.Guid> value);
    partial void OnCategory3IdChanged();
    partial void OnIntegrationLabelChanging(string value);
    partial void OnIntegrationLabelChanged();
    partial void OnIntegrationIdChanging(System.Nullable<System.Guid> value);
    partial void OnIntegrationIdChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    #endregion
		
		public Campaign()
		{
			this._Automations = new EntitySet<Automation>(new Action<Automation>(this.attach_Automations), new Action<Automation>(this.detach_Automations));
			this._Visits = new EntitySet<Visit>(new Action<Visit>(this.attach_Visits), new Action<Visit>(this.detach_Visits));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CampaignId
		{
			get
			{
				return this._CampaignId;
			}
			set
			{
				if ((this._CampaignId != value))
				{
					this.OnCampaignIdChanging(value);
					this.SendPropertyChanging();
					this._CampaignId = value;
					this.SendPropertyChanged("CampaignId");
					this.OnCampaignIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CampaignName
		{
			get
			{
				return this._CampaignName;
			}
			set
			{
				if ((this._CampaignName != value))
				{
					this.OnCampaignNameChanging(value);
					this.SendPropertyChanging();
					this._CampaignName = value;
					this.SendPropertyChanged("CampaignName");
					this.OnCampaignNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Int NOT NULL")]
		public int Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostPerClick", DbType="Int NOT NULL")]
		public int CostPerClick
		{
			get
			{
				return this._CostPerClick;
			}
			set
			{
				if ((this._CostPerClick != value))
				{
					this.OnCostPerClickChanging(value);
					this.SendPropertyChanging();
					this._CostPerClick = value;
					this.SendPropertyChanged("CostPerClick");
					this.OnCostPerClickChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostPerDay", DbType="Int NOT NULL")]
		public int CostPerDay
		{
			get
			{
				return this._CostPerDay;
			}
			set
			{
				if ((this._CostPerDay != value))
				{
					this.OnCostPerDayChanging(value);
					this.SendPropertyChanging();
					this._CostPerDay = value;
					this.SendPropertyChanged("CostPerDay");
					this.OnCostPerDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostBase", DbType="Int NOT NULL")]
		public int CostBase
		{
			get
			{
				return this._CostBase;
			}
			set
			{
				if ((this._CostBase != value))
				{
					this.OnCostBaseChanging(value);
					this.SendPropertyChanging();
					this._CostBase = value;
					this.SendPropertyChanged("CostBase");
					this.OnCostBaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category1Label", DbType="NVarChar(100)")]
		public string Category1Label
		{
			get
			{
				return this._Category1Label;
			}
			set
			{
				if ((this._Category1Label != value))
				{
					this.OnCategory1LabelChanging(value);
					this.SendPropertyChanging();
					this._Category1Label = value;
					this.SendPropertyChanged("Category1Label");
					this.OnCategory1LabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category1Id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Category1Id
		{
			get
			{
				return this._Category1Id;
			}
			set
			{
				if ((this._Category1Id != value))
				{
					this.OnCategory1IdChanging(value);
					this.SendPropertyChanging();
					this._Category1Id = value;
					this.SendPropertyChanged("Category1Id");
					this.OnCategory1IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category2Label", DbType="NVarChar(100)")]
		public string Category2Label
		{
			get
			{
				return this._Category2Label;
			}
			set
			{
				if ((this._Category2Label != value))
				{
					this.OnCategory2LabelChanging(value);
					this.SendPropertyChanging();
					this._Category2Label = value;
					this.SendPropertyChanged("Category2Label");
					this.OnCategory2LabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category2Id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Category2Id
		{
			get
			{
				return this._Category2Id;
			}
			set
			{
				if ((this._Category2Id != value))
				{
					this.OnCategory2IdChanging(value);
					this.SendPropertyChanging();
					this._Category2Id = value;
					this.SendPropertyChanged("Category2Id");
					this.OnCategory2IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category3Label", DbType="NVarChar(100)")]
		public string Category3Label
		{
			get
			{
				return this._Category3Label;
			}
			set
			{
				if ((this._Category3Label != value))
				{
					this.OnCategory3LabelChanging(value);
					this.SendPropertyChanging();
					this._Category3Label = value;
					this.SendPropertyChanged("Category3Label");
					this.OnCategory3LabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category3Id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Category3Id
		{
			get
			{
				return this._Category3Id;
			}
			set
			{
				if ((this._Category3Id != value))
				{
					this.OnCategory3IdChanging(value);
					this.SendPropertyChanging();
					this._Category3Id = value;
					this.SendPropertyChanged("Category3Id");
					this.OnCategory3IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntegrationLabel", DbType="NVarChar(100)")]
		public string IntegrationLabel
		{
			get
			{
				return this._IntegrationLabel;
			}
			set
			{
				if ((this._IntegrationLabel != value))
				{
					this.OnIntegrationLabelChanging(value);
					this.SendPropertyChanging();
					this._IntegrationLabel = value;
					this.SendPropertyChanged("IntegrationLabel");
					this.OnIntegrationLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntegrationId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IntegrationId
		{
			get
			{
				return this._IntegrationId;
			}
			set
			{
				if ((this._IntegrationId != value))
				{
					this.OnIntegrationIdChanging(value);
					this.SendPropertyChanging();
					this._IntegrationId = value;
					this.SendPropertyChanged("IntegrationId");
					this.OnIntegrationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_Automation", Storage="_Automations", ThisKey="CampaignId", OtherKey="Campaignid")]
		public EntitySet<Automation> Automations
		{
			get
			{
				return this._Automations;
			}
			set
			{
				this._Automations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_Visit", Storage="_Visits", ThisKey="CampaignId", OtherKey="CampaignId")]
		public EntitySet<Visit> Visits
		{
			get
			{
				return this._Visits;
			}
			set
			{
				this._Visits.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Automations(Automation entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = this;
		}
		
		private void detach_Automations(Automation entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = null;
		}
		
		private void attach_Visits(Visit entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = this;
		}
		
		private void detach_Visits(Visit entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GeoIps")]
	public partial class GeoIp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Ip;
		
		private int _VisitorClassification;
		
		private string _CachedValue;
		
		private System.Nullable<System.DateTime> _Fetched;
		
		private byte _Status;
		
		private EntitySet<Visit> _Visits;
		
		private EntityRef<VisitorClassification> _VisitorClassification1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIpChanging(System.Data.Linq.Binary value);
    partial void OnIpChanged();
    partial void OnVisitorClassificationChanging(int value);
    partial void OnVisitorClassificationChanged();
    partial void OnCachedValueChanging(string value);
    partial void OnCachedValueChanged();
    partial void OnFetchedChanging(System.Nullable<System.DateTime> value);
    partial void OnFetchedChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public GeoIp()
		{
			this._Visits = new EntitySet<Visit>(new Action<Visit>(this.attach_Visits), new Action<Visit>(this.detach_Visits));
			this._VisitorClassification1 = default(EntityRef<VisitorClassification>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ip", DbType="VarBinary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Ip
		{
			get
			{
				return this._Ip;
			}
			set
			{
				if ((this._Ip != value))
				{
					this.OnIpChanging(value);
					this.SendPropertyChanging();
					this._Ip = value;
					this.SendPropertyChanged("Ip");
					this.OnIpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitorClassification", DbType="Int NOT NULL")]
		public int VisitorClassification
		{
			get
			{
				return this._VisitorClassification;
			}
			set
			{
				if ((this._VisitorClassification != value))
				{
					if (this._VisitorClassification1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVisitorClassificationChanging(value);
					this.SendPropertyChanging();
					this._VisitorClassification = value;
					this.SendPropertyChanged("VisitorClassification");
					this.OnVisitorClassificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CachedValue", DbType="NVarChar(MAX)")]
		public string CachedValue
		{
			get
			{
				return this._CachedValue;
			}
			set
			{
				if ((this._CachedValue != value))
				{
					this.OnCachedValueChanging(value);
					this.SendPropertyChanging();
					this._CachedValue = value;
					this.SendPropertyChanged("CachedValue");
					this.OnCachedValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fetched", DbType="DateTime")]
		public System.Nullable<System.DateTime> Fetched
		{
			get
			{
				return this._Fetched;
			}
			set
			{
				if ((this._Fetched != value))
				{
					this.OnFetchedChanging(value);
					this.SendPropertyChanging();
					this._Fetched = value;
					this.SendPropertyChanged("Fetched");
					this.OnFetchedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeoIp_Visit", Storage="_Visits", ThisKey="Ip", OtherKey="Ip")]
		public EntitySet<Visit> Visits
		{
			get
			{
				return this._Visits;
			}
			set
			{
				this._Visits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VisitorClassification_GeoIp", Storage="_VisitorClassification1", ThisKey="VisitorClassification", OtherKey="VisitorClassification1", IsForeignKey=true)]
		public VisitorClassification VisitorClassification1
		{
			get
			{
				return this._VisitorClassification1.Entity;
			}
			set
			{
				VisitorClassification previousValue = this._VisitorClassification1.Entity;
				if (((previousValue != value) 
							|| (this._VisitorClassification1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VisitorClassification1.Entity = null;
						previousValue.GeoIps.Remove(this);
					}
					this._VisitorClassification1.Entity = value;
					if ((value != null))
					{
						value.GeoIps.Add(this);
						this._VisitorClassification = value.VisitorClassification1;
					}
					else
					{
						this._VisitorClassification = default(int);
					}
					this.SendPropertyChanged("VisitorClassification1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Visits(Visit entity)
		{
			this.SendPropertyChanging();
			entity.GeoIp = this;
		}
		
		private void detach_Visits(Visit entity)
		{
			this.SendPropertyChanging();
			entity.GeoIp = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ItemUrls")]
	public partial class ItemUrl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ItemId;
		
		private string _Url;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIdChanging(System.Guid value);
    partial void OnItemIdChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    #endregion
		
		public ItemUrl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(800)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Keywords")]
	public partial class Keyword : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _KeywordsId;
		
		private string _Text;
		
		private EntitySet<Visit> _Visits;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeywordsIdChanging(System.Guid value);
    partial void OnKeywordsIdChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    #endregion
		
		public Keyword()
		{
			this._Visits = new EntitySet<Visit>(new Action<Visit>(this.attach_Visits), new Action<Visit>(this.detach_Visits));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeywordsId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid KeywordsId
		{
			get
			{
				return this._KeywordsId;
			}
			set
			{
				if ((this._KeywordsId != value))
				{
					this.OnKeywordsIdChanging(value);
					this.SendPropertyChanging();
					this._KeywordsId = value;
					this.SendPropertyChanged("KeywordsId");
					this.OnKeywordsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Keyword_Visit", Storage="_Visits", ThisKey="KeywordsId", OtherKey="KeywordsId")]
		public EntitySet<Visit> Visits
		{
			get
			{
				return this._Visits;
			}
			set
			{
				this._Visits.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Visits(Visit entity)
		{
			this.SendPropertyChanging();
			entity.Keyword = this;
		}
		
		private void detach_Visits(Visit entity)
		{
			this.SendPropertyChanging();
			entity.Keyword = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Locations")]
	public partial class Location : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _LocationId;
		
		private string _BusinessName;
		
		private string _Country;
		
		private int _VisitorClassification;
		
		private System.Nullable<System.Guid> _IntegrationId;
		
		private string _IntegrationLabel;
		
		private string _ExternalUser;
		
		private EntitySet<Visit> _Visits;
		
		private EntitySet<NotificationSubscription> _NotificationSubscriptions;
		
		private EntityRef<VisitorClassification> _VisitorClassification1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLocationIdChanging(System.Guid value);
    partial void OnLocationIdChanged();
    partial void OnBusinessNameChanging(string value);
    partial void OnBusinessNameChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnVisitorClassificationChanging(int value);
    partial void OnVisitorClassificationChanged();
    partial void OnIntegrationIdChanging(System.Nullable<System.Guid> value);
    partial void OnIntegrationIdChanged();
    partial void OnIntegrationLabelChanging(string value);
    partial void OnIntegrationLabelChanged();
    partial void OnExternalUserChanging(string value);
    partial void OnExternalUserChanged();
    #endregion
		
		public Location()
		{
			this._Visits = new EntitySet<Visit>(new Action<Visit>(this.attach_Visits), new Action<Visit>(this.detach_Visits));
			this._NotificationSubscriptions = new EntitySet<NotificationSubscription>(new Action<NotificationSubscription>(this.attach_NotificationSubscriptions), new Action<NotificationSubscription>(this.detach_NotificationSubscriptions));
			this._VisitorClassification1 = default(EntityRef<VisitorClassification>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid LocationId
		{
			get
			{
				return this._LocationId;
			}
			set
			{
				if ((this._LocationId != value))
				{
					this.OnLocationIdChanging(value);
					this.SendPropertyChanging();
					this._LocationId = value;
					this.SendPropertyChanged("LocationId");
					this.OnLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string BusinessName
		{
			get
			{
				return this._BusinessName;
			}
			set
			{
				if ((this._BusinessName != value))
				{
					this.OnBusinessNameChanging(value);
					this.SendPropertyChanging();
					this._BusinessName = value;
					this.SendPropertyChanged("BusinessName");
					this.OnBusinessNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitorClassification", DbType="Int NOT NULL")]
		public int VisitorClassification
		{
			get
			{
				return this._VisitorClassification;
			}
			set
			{
				if ((this._VisitorClassification != value))
				{
					if (this._VisitorClassification1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVisitorClassificationChanging(value);
					this.SendPropertyChanging();
					this._VisitorClassification = value;
					this.SendPropertyChanged("VisitorClassification");
					this.OnVisitorClassificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntegrationId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IntegrationId
		{
			get
			{
				return this._IntegrationId;
			}
			set
			{
				if ((this._IntegrationId != value))
				{
					this.OnIntegrationIdChanging(value);
					this.SendPropertyChanging();
					this._IntegrationId = value;
					this.SendPropertyChanged("IntegrationId");
					this.OnIntegrationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntegrationLabel", DbType="NVarChar(50)")]
		public string IntegrationLabel
		{
			get
			{
				return this._IntegrationLabel;
			}
			set
			{
				if ((this._IntegrationLabel != value))
				{
					this.OnIntegrationLabelChanging(value);
					this.SendPropertyChanging();
					this._IntegrationLabel = value;
					this.SendPropertyChanged("IntegrationLabel");
					this.OnIntegrationLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalUser", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string ExternalUser
		{
			get
			{
				return this._ExternalUser;
			}
			set
			{
				if ((this._ExternalUser != value))
				{
					this.OnExternalUserChanging(value);
					this.SendPropertyChanging();
					this._ExternalUser = value;
					this.SendPropertyChanged("ExternalUser");
					this.OnExternalUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Visit", Storage="_Visits", ThisKey="LocationId", OtherKey="LocationId")]
		public EntitySet<Visit> Visits
		{
			get
			{
				return this._Visits;
			}
			set
			{
				this._Visits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_NotificationSubscription", Storage="_NotificationSubscriptions", ThisKey="LocationId", OtherKey="LocationId")]
		public EntitySet<NotificationSubscription> NotificationSubscriptions
		{
			get
			{
				return this._NotificationSubscriptions;
			}
			set
			{
				this._NotificationSubscriptions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VisitorClassification_Location", Storage="_VisitorClassification1", ThisKey="VisitorClassification", OtherKey="VisitorClassification1", IsForeignKey=true)]
		public VisitorClassification VisitorClassification1
		{
			get
			{
				return this._VisitorClassification1.Entity;
			}
			set
			{
				VisitorClassification previousValue = this._VisitorClassification1.Entity;
				if (((previousValue != value) 
							|| (this._VisitorClassification1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VisitorClassification1.Entity = null;
						previousValue.Locations.Remove(this);
					}
					this._VisitorClassification1.Entity = value;
					if ((value != null))
					{
						value.Locations.Add(this);
						this._VisitorClassification = value.VisitorClassification1;
					}
					else
					{
						this._VisitorClassification = default(int);
					}
					this.SendPropertyChanged("VisitorClassification1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Visits(Visit entity)
		{
			this.SendPropertyChanging();
			entity.Location = this;
		}
		
		private void detach_Visits(Visit entity)
		{
			this.SendPropertyChanging();
			entity.Location = null;
		}
		
		private void attach_NotificationSubscriptions(NotificationSubscription entity)
		{
			this.SendPropertyChanging();
			entity.Location = this;
		}
		
		private void detach_NotificationSubscriptions(NotificationSubscription entity)
		{
			this.SendPropertyChanging();
			entity.Location = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NotificationSubscriptions")]
	public partial class NotificationSubscription : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _NotificationSubscriptionsId;
		
		private System.Guid _LocationId;
		
		private string _MailRecipients;
		
		private EntityRef<Location> _Location;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNotificationSubscriptionsIdChanging(System.Guid value);
    partial void OnNotificationSubscriptionsIdChanged();
    partial void OnLocationIdChanging(System.Guid value);
    partial void OnLocationIdChanged();
    partial void OnMailRecipientsChanging(string value);
    partial void OnMailRecipientsChanged();
    #endregion
		
		public NotificationSubscription()
		{
			this._Location = default(EntityRef<Location>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationSubscriptionsId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid NotificationSubscriptionsId
		{
			get
			{
				return this._NotificationSubscriptionsId;
			}
			set
			{
				if ((this._NotificationSubscriptionsId != value))
				{
					this.OnNotificationSubscriptionsIdChanging(value);
					this.SendPropertyChanging();
					this._NotificationSubscriptionsId = value;
					this.SendPropertyChanged("NotificationSubscriptionsId");
					this.OnNotificationSubscriptionsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid LocationId
		{
			get
			{
				return this._LocationId;
			}
			set
			{
				if ((this._LocationId != value))
				{
					if (this._Location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationIdChanging(value);
					this.SendPropertyChanging();
					this._LocationId = value;
					this.SendPropertyChanged("LocationId");
					this.OnLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailRecipients", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string MailRecipients
		{
			get
			{
				return this._MailRecipients;
			}
			set
			{
				if ((this._MailRecipients != value))
				{
					this.OnMailRecipientsChanging(value);
					this.SendPropertyChanging();
					this._MailRecipients = value;
					this.SendPropertyChanged("MailRecipients");
					this.OnMailRecipientsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_NotificationSubscription", Storage="_Location", ThisKey="LocationId", OtherKey="LocationId", IsForeignKey=true)]
		public Location Location
		{
			get
			{
				return this._Location.Entity;
			}
			set
			{
				Location previousValue = this._Location.Entity;
				if (((previousValue != value) 
							|| (this._Location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Location.Entity = null;
						previousValue.NotificationSubscriptions.Remove(this);
					}
					this._Location.Entity = value;
					if ((value != null))
					{
						value.NotificationSubscriptions.Add(this);
						this._LocationId = value.LocationId;
					}
					else
					{
						this._LocationId = default(System.Guid);
					}
					this.SendPropertyChanged("Location");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OS")]
	public partial class O : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _OsId;
		
		private string _MajorName;
		
		private string _MinorName;
		
		private string _Version;
		
		private EntitySet<Visit> _Visits;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOsIdChanging(System.Guid value);
    partial void OnOsIdChanged();
    partial void OnMajorNameChanging(string value);
    partial void OnMajorNameChanged();
    partial void OnMinorNameChanging(string value);
    partial void OnMinorNameChanged();
    partial void OnVersionChanging(string value);
    partial void OnVersionChanged();
    #endregion
		
		public O()
		{
			this._Visits = new EntitySet<Visit>(new Action<Visit>(this.attach_Visits), new Action<Visit>(this.detach_Visits));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OsId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid OsId
		{
			get
			{
				return this._OsId;
			}
			set
			{
				if ((this._OsId != value))
				{
					this.OnOsIdChanging(value);
					this.SendPropertyChanging();
					this._OsId = value;
					this.SendPropertyChanged("OsId");
					this.OnOsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string MajorName
		{
			get
			{
				return this._MajorName;
			}
			set
			{
				if ((this._MajorName != value))
				{
					this.OnMajorNameChanging(value);
					this.SendPropertyChanging();
					this._MajorName = value;
					this.SendPropertyChanged("MajorName");
					this.OnMajorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinorName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string MinorName
		{
			get
			{
				return this._MinorName;
			}
			set
			{
				if ((this._MinorName != value))
				{
					this.OnMinorNameChanging(value);
					this.SendPropertyChanging();
					this._MinorName = value;
					this.SendPropertyChanged("MinorName");
					this.OnMinorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="O_Visit", Storage="_Visits", ThisKey="OsId", OtherKey="OsId")]
		public EntitySet<Visit> Visits
		{
			get
			{
				return this._Visits;
			}
			set
			{
				this._Visits.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Visits(Visit entity)
		{
			this.SendPropertyChanging();
			entity.O = this;
		}
		
		private void detach_Visits(Visit entity)
		{
			this.SendPropertyChanging();
			entity.O = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PageEventDefinitions")]
	public partial class PageEventDefinition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PageEventDefinitionId;
		
		private string _Name;
		
		private int _Value;
		
		private bool _IsSystem;
		
		private bool _IsAuthorFeedback;
		
		private bool _IsGoal;
		
		private bool _IsFailure;
		
		private string _Category1Label;
		
		private System.Nullable<System.Guid> _Category1Id;
		
		private string _Category2Label;
		
		private System.Nullable<System.Guid> _Category2Id;
		
		private string _Category3Label;
		
		private System.Nullable<System.Guid> _Category3Id;
		
		private EntitySet<PageEvent> _PageEvents;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPageEventDefinitionIdChanging(System.Guid value);
    partial void OnPageEventDefinitionIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnValueChanging(int value);
    partial void OnValueChanged();
    partial void OnIsSystemChanging(bool value);
    partial void OnIsSystemChanged();
    partial void OnIsAuthorFeedbackChanging(bool value);
    partial void OnIsAuthorFeedbackChanged();
    partial void OnIsGoalChanging(bool value);
    partial void OnIsGoalChanged();
    partial void OnIsFailureChanging(bool value);
    partial void OnIsFailureChanged();
    partial void OnCategory1LabelChanging(string value);
    partial void OnCategory1LabelChanged();
    partial void OnCategory1IdChanging(System.Nullable<System.Guid> value);
    partial void OnCategory1IdChanged();
    partial void OnCategory2LabelChanging(string value);
    partial void OnCategory2LabelChanged();
    partial void OnCategory2IdChanging(System.Nullable<System.Guid> value);
    partial void OnCategory2IdChanged();
    partial void OnCategory3LabelChanging(string value);
    partial void OnCategory3LabelChanged();
    partial void OnCategory3IdChanging(System.Nullable<System.Guid> value);
    partial void OnCategory3IdChanged();
    #endregion
		
		public PageEventDefinition()
		{
			this._PageEvents = new EntitySet<PageEvent>(new Action<PageEvent>(this.attach_PageEvents), new Action<PageEvent>(this.detach_PageEvents));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageEventDefinitionId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PageEventDefinitionId
		{
			get
			{
				return this._PageEventDefinitionId;
			}
			set
			{
				if ((this._PageEventDefinitionId != value))
				{
					this.OnPageEventDefinitionIdChanging(value);
					this.SendPropertyChanging();
					this._PageEventDefinitionId = value;
					this.SendPropertyChanged("PageEventDefinitionId");
					this.OnPageEventDefinitionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Int NOT NULL")]
		public int Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSystem", DbType="Bit NOT NULL")]
		public bool IsSystem
		{
			get
			{
				return this._IsSystem;
			}
			set
			{
				if ((this._IsSystem != value))
				{
					this.OnIsSystemChanging(value);
					this.SendPropertyChanging();
					this._IsSystem = value;
					this.SendPropertyChanged("IsSystem");
					this.OnIsSystemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAuthorFeedback", DbType="Bit NOT NULL")]
		public bool IsAuthorFeedback
		{
			get
			{
				return this._IsAuthorFeedback;
			}
			set
			{
				if ((this._IsAuthorFeedback != value))
				{
					this.OnIsAuthorFeedbackChanging(value);
					this.SendPropertyChanging();
					this._IsAuthorFeedback = value;
					this.SendPropertyChanged("IsAuthorFeedback");
					this.OnIsAuthorFeedbackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsGoal", DbType="Bit NOT NULL")]
		public bool IsGoal
		{
			get
			{
				return this._IsGoal;
			}
			set
			{
				if ((this._IsGoal != value))
				{
					this.OnIsGoalChanging(value);
					this.SendPropertyChanging();
					this._IsGoal = value;
					this.SendPropertyChanged("IsGoal");
					this.OnIsGoalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFailure", DbType="Bit NOT NULL")]
		public bool IsFailure
		{
			get
			{
				return this._IsFailure;
			}
			set
			{
				if ((this._IsFailure != value))
				{
					this.OnIsFailureChanging(value);
					this.SendPropertyChanging();
					this._IsFailure = value;
					this.SendPropertyChanged("IsFailure");
					this.OnIsFailureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category1Label", DbType="NVarChar(100)")]
		public string Category1Label
		{
			get
			{
				return this._Category1Label;
			}
			set
			{
				if ((this._Category1Label != value))
				{
					this.OnCategory1LabelChanging(value);
					this.SendPropertyChanging();
					this._Category1Label = value;
					this.SendPropertyChanged("Category1Label");
					this.OnCategory1LabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category1Id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Category1Id
		{
			get
			{
				return this._Category1Id;
			}
			set
			{
				if ((this._Category1Id != value))
				{
					this.OnCategory1IdChanging(value);
					this.SendPropertyChanging();
					this._Category1Id = value;
					this.SendPropertyChanged("Category1Id");
					this.OnCategory1IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category2Label", DbType="NVarChar(100)")]
		public string Category2Label
		{
			get
			{
				return this._Category2Label;
			}
			set
			{
				if ((this._Category2Label != value))
				{
					this.OnCategory2LabelChanging(value);
					this.SendPropertyChanging();
					this._Category2Label = value;
					this.SendPropertyChanged("Category2Label");
					this.OnCategory2LabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category2Id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Category2Id
		{
			get
			{
				return this._Category2Id;
			}
			set
			{
				if ((this._Category2Id != value))
				{
					this.OnCategory2IdChanging(value);
					this.SendPropertyChanging();
					this._Category2Id = value;
					this.SendPropertyChanged("Category2Id");
					this.OnCategory2IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category3Label", DbType="NVarChar(100)")]
		public string Category3Label
		{
			get
			{
				return this._Category3Label;
			}
			set
			{
				if ((this._Category3Label != value))
				{
					this.OnCategory3LabelChanging(value);
					this.SendPropertyChanging();
					this._Category3Label = value;
					this.SendPropertyChanged("Category3Label");
					this.OnCategory3LabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category3Id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Category3Id
		{
			get
			{
				return this._Category3Id;
			}
			set
			{
				if ((this._Category3Id != value))
				{
					this.OnCategory3IdChanging(value);
					this.SendPropertyChanging();
					this._Category3Id = value;
					this.SendPropertyChanged("Category3Id");
					this.OnCategory3IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PageEventDefinition_PageEvent", Storage="_PageEvents", ThisKey="PageEventDefinitionId", OtherKey="PageEventDefinitionId")]
		public EntitySet<PageEvent> PageEvents
		{
			get
			{
				return this._PageEvents;
			}
			set
			{
				this._PageEvents.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PageEvents(PageEvent entity)
		{
			this.SendPropertyChanging();
			entity.PageEventDefinition = this;
		}
		
		private void detach_PageEvents(PageEvent entity)
		{
			this.SendPropertyChanging();
			entity.PageEventDefinition = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PageEvents")]
	public partial class PageEvent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PageEventId;
		
		private System.Guid _VisitorId;
		
		private System.Guid _PageEventDefinitionId;
		
		private System.Guid _PageId;
		
		private System.Guid _VisitId;
		
		private System.Guid _ItemId;
		
		private System.Nullable<System.Guid> _IntegrationId;
		
		private string _IntegrationLabel;
		
		private string _DataKey;
		
		private string _Data;
		
		private int _DataCode;
		
		private string _Text;
		
		private long _Timestamp;
		
		private int _CustomSorting;
		
		private System.DateTime _DateTime;
		
		private long _rn;
		
		private EntityRef<PageEventDefinition> _PageEventDefinition;
		
		private EntityRef<Visit> _Visit;
		
		private EntityRef<Page> _Page;
		
		private EntityRef<Visitor> _Visitor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPageEventIdChanging(System.Guid value);
    partial void OnPageEventIdChanged();
    partial void OnVisitorIdChanging(System.Guid value);
    partial void OnVisitorIdChanged();
    partial void OnPageEventDefinitionIdChanging(System.Guid value);
    partial void OnPageEventDefinitionIdChanged();
    partial void OnPageIdChanging(System.Guid value);
    partial void OnPageIdChanged();
    partial void OnVisitIdChanging(System.Guid value);
    partial void OnVisitIdChanged();
    partial void OnItemIdChanging(System.Guid value);
    partial void OnItemIdChanged();
    partial void OnIntegrationIdChanging(System.Nullable<System.Guid> value);
    partial void OnIntegrationIdChanged();
    partial void OnIntegrationLabelChanging(string value);
    partial void OnIntegrationLabelChanged();
    partial void OnDataKeyChanging(string value);
    partial void OnDataKeyChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    partial void OnDataCodeChanging(int value);
    partial void OnDataCodeChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnTimestampChanging(long value);
    partial void OnTimestampChanged();
    partial void OnCustomSortingChanging(int value);
    partial void OnCustomSortingChanged();
    partial void OnDateTimeChanging(System.DateTime value);
    partial void OnDateTimeChanged();
    partial void OnrnChanging(long value);
    partial void OnrnChanged();
    #endregion
		
		public PageEvent()
		{
			this._PageEventDefinition = default(EntityRef<PageEventDefinition>);
			this._Visit = default(EntityRef<Visit>);
			this._Page = default(EntityRef<Page>);
			this._Visitor = default(EntityRef<Visitor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageEventId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PageEventId
		{
			get
			{
				return this._PageEventId;
			}
			set
			{
				if ((this._PageEventId != value))
				{
					this.OnPageEventIdChanging(value);
					this.SendPropertyChanging();
					this._PageEventId = value;
					this.SendPropertyChanged("PageEventId");
					this.OnPageEventIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitorId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VisitorId
		{
			get
			{
				return this._VisitorId;
			}
			set
			{
				if ((this._VisitorId != value))
				{
					if (this._Visitor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVisitorIdChanging(value);
					this.SendPropertyChanging();
					this._VisitorId = value;
					this.SendPropertyChanged("VisitorId");
					this.OnVisitorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageEventDefinitionId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PageEventDefinitionId
		{
			get
			{
				return this._PageEventDefinitionId;
			}
			set
			{
				if ((this._PageEventDefinitionId != value))
				{
					if (this._PageEventDefinition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPageEventDefinitionIdChanging(value);
					this.SendPropertyChanging();
					this._PageEventDefinitionId = value;
					this.SendPropertyChanged("PageEventDefinitionId");
					this.OnPageEventDefinitionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PageId
		{
			get
			{
				return this._PageId;
			}
			set
			{
				if ((this._PageId != value))
				{
					if (this._Page.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPageIdChanging(value);
					this.SendPropertyChanging();
					this._PageId = value;
					this.SendPropertyChanged("PageId");
					this.OnPageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VisitId
		{
			get
			{
				return this._VisitId;
			}
			set
			{
				if ((this._VisitId != value))
				{
					if (this._Visit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVisitIdChanging(value);
					this.SendPropertyChanging();
					this._VisitId = value;
					this.SendPropertyChanged("VisitId");
					this.OnVisitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntegrationId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IntegrationId
		{
			get
			{
				return this._IntegrationId;
			}
			set
			{
				if ((this._IntegrationId != value))
				{
					this.OnIntegrationIdChanging(value);
					this.SendPropertyChanging();
					this._IntegrationId = value;
					this.SendPropertyChanged("IntegrationId");
					this.OnIntegrationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntegrationLabel", DbType="NVarChar(100)")]
		public string IntegrationLabel
		{
			get
			{
				return this._IntegrationLabel;
			}
			set
			{
				if ((this._IntegrationLabel != value))
				{
					this.OnIntegrationLabelChanging(value);
					this.SendPropertyChanging();
					this._IntegrationLabel = value;
					this.SendPropertyChanged("IntegrationLabel");
					this.OnIntegrationLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataKey", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string DataKey
		{
			get
			{
				return this._DataKey;
			}
			set
			{
				if ((this._DataKey != value))
				{
					this.OnDataKeyChanging(value);
					this.SendPropertyChanging();
					this._DataKey = value;
					this.SendPropertyChanged("DataKey");
					this.OnDataKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NVarChar(450) NOT NULL", CanBeNull=false)]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataCode", DbType="Int NOT NULL")]
		public int DataCode
		{
			get
			{
				return this._DataCode;
			}
			set
			{
				if ((this._DataCode != value))
				{
					this.OnDataCodeChanging(value);
					this.SendPropertyChanging();
					this._DataCode = value;
					this.SendPropertyChanged("DataCode");
					this.OnDataCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="BigInt NOT NULL")]
		public long Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomSorting", DbType="Int NOT NULL")]
		public int CustomSorting
		{
			get
			{
				return this._CustomSorting;
			}
			set
			{
				if ((this._CustomSorting != value))
				{
					this.OnCustomSortingChanging(value);
					this.SendPropertyChanging();
					this._CustomSorting = value;
					this.SendPropertyChanged("CustomSorting");
					this.OnCustomSortingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this.OnDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DateTime = value;
					this.SendPropertyChanged("DateTime");
					this.OnDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rn", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long rn
		{
			get
			{
				return this._rn;
			}
			set
			{
				if ((this._rn != value))
				{
					this.OnrnChanging(value);
					this.SendPropertyChanging();
					this._rn = value;
					this.SendPropertyChanged("rn");
					this.OnrnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PageEventDefinition_PageEvent", Storage="_PageEventDefinition", ThisKey="PageEventDefinitionId", OtherKey="PageEventDefinitionId", IsForeignKey=true)]
		public PageEventDefinition PageEventDefinition
		{
			get
			{
				return this._PageEventDefinition.Entity;
			}
			set
			{
				PageEventDefinition previousValue = this._PageEventDefinition.Entity;
				if (((previousValue != value) 
							|| (this._PageEventDefinition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PageEventDefinition.Entity = null;
						previousValue.PageEvents.Remove(this);
					}
					this._PageEventDefinition.Entity = value;
					if ((value != null))
					{
						value.PageEvents.Add(this);
						this._PageEventDefinitionId = value.PageEventDefinitionId;
					}
					else
					{
						this._PageEventDefinitionId = default(System.Guid);
					}
					this.SendPropertyChanged("PageEventDefinition");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visit_PageEvent", Storage="_Visit", ThisKey="VisitId", OtherKey="VisitId", IsForeignKey=true)]
		public Visit Visit
		{
			get
			{
				return this._Visit.Entity;
			}
			set
			{
				Visit previousValue = this._Visit.Entity;
				if (((previousValue != value) 
							|| (this._Visit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Visit.Entity = null;
						previousValue.PageEvents.Remove(this);
					}
					this._Visit.Entity = value;
					if ((value != null))
					{
						value.PageEvents.Add(this);
						this._VisitId = value.VisitId;
					}
					else
					{
						this._VisitId = default(System.Guid);
					}
					this.SendPropertyChanged("Visit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Page_PageEvent", Storage="_Page", ThisKey="PageId", OtherKey="PageId", IsForeignKey=true)]
		public Page Page
		{
			get
			{
				return this._Page.Entity;
			}
			set
			{
				Page previousValue = this._Page.Entity;
				if (((previousValue != value) 
							|| (this._Page.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Page.Entity = null;
						previousValue.PageEvents.Remove(this);
					}
					this._Page.Entity = value;
					if ((value != null))
					{
						value.PageEvents.Add(this);
						this._PageId = value.PageId;
					}
					else
					{
						this._PageId = default(System.Guid);
					}
					this.SendPropertyChanged("Page");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visitor_PageEvent", Storage="_Visitor", ThisKey="VisitorId", OtherKey="VisitorId", IsForeignKey=true)]
		public Visitor Visitor
		{
			get
			{
				return this._Visitor.Entity;
			}
			set
			{
				Visitor previousValue = this._Visitor.Entity;
				if (((previousValue != value) 
							|| (this._Visitor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Visitor.Entity = null;
						previousValue.PageEvents.Remove(this);
					}
					this._Visitor.Entity = value;
					if ((value != null))
					{
						value.PageEvents.Add(this);
						this._VisitorId = value.VisitorId;
					}
					else
					{
						this._VisitorId = default(System.Guid);
					}
					this.SendPropertyChanged("Visitor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pages")]
	public partial class Page : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PageId;
		
		private System.Guid _VisitId;
		
		private System.Guid _VisitorId;
		
		private int _VisitPageIndex;
		
		private System.DateTime _DateTime;
		
		private System.Guid _ItemId;
		
		private string _ItemLanguage;
		
		private int _ItemVersion;
		
		private System.Guid _DeviceId;
		
		private string _Url;
		
		private string _UrlText;
		
		private System.Nullable<System.Guid> _TestSetId;
		
		private System.Data.Linq.Binary _TestValues;
		
		private System.Nullable<int> _Duration;
		
		private string _Data;
		
		private string _DeviceName;
		
		private long _rn;
		
		private EntitySet<PageEvent> _PageEvents;
		
		private EntityRef<Visit> _Visit;
		
		private EntityRef<Visitor> _Visitor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPageIdChanging(System.Guid value);
    partial void OnPageIdChanged();
    partial void OnVisitIdChanging(System.Guid value);
    partial void OnVisitIdChanged();
    partial void OnVisitorIdChanging(System.Guid value);
    partial void OnVisitorIdChanged();
    partial void OnVisitPageIndexChanging(int value);
    partial void OnVisitPageIndexChanged();
    partial void OnDateTimeChanging(System.DateTime value);
    partial void OnDateTimeChanged();
    partial void OnItemIdChanging(System.Guid value);
    partial void OnItemIdChanged();
    partial void OnItemLanguageChanging(string value);
    partial void OnItemLanguageChanged();
    partial void OnItemVersionChanging(int value);
    partial void OnItemVersionChanged();
    partial void OnDeviceIdChanging(System.Guid value);
    partial void OnDeviceIdChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnUrlTextChanging(string value);
    partial void OnUrlTextChanged();
    partial void OnTestSetIdChanging(System.Nullable<System.Guid> value);
    partial void OnTestSetIdChanged();
    partial void OnTestValuesChanging(System.Data.Linq.Binary value);
    partial void OnTestValuesChanged();
    partial void OnDurationChanging(System.Nullable<int> value);
    partial void OnDurationChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    partial void OnDeviceNameChanging(string value);
    partial void OnDeviceNameChanged();
    partial void OnrnChanging(long value);
    partial void OnrnChanged();
    #endregion
		
		public Page()
		{
			this._PageEvents = new EntitySet<PageEvent>(new Action<PageEvent>(this.attach_PageEvents), new Action<PageEvent>(this.detach_PageEvents));
			this._Visit = default(EntityRef<Visit>);
			this._Visitor = default(EntityRef<Visitor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PageId
		{
			get
			{
				return this._PageId;
			}
			set
			{
				if ((this._PageId != value))
				{
					this.OnPageIdChanging(value);
					this.SendPropertyChanging();
					this._PageId = value;
					this.SendPropertyChanged("PageId");
					this.OnPageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VisitId
		{
			get
			{
				return this._VisitId;
			}
			set
			{
				if ((this._VisitId != value))
				{
					if (this._Visit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVisitIdChanging(value);
					this.SendPropertyChanging();
					this._VisitId = value;
					this.SendPropertyChanged("VisitId");
					this.OnVisitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitorId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VisitorId
		{
			get
			{
				return this._VisitorId;
			}
			set
			{
				if ((this._VisitorId != value))
				{
					if (this._Visitor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVisitorIdChanging(value);
					this.SendPropertyChanging();
					this._VisitorId = value;
					this.SendPropertyChanged("VisitorId");
					this.OnVisitorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitPageIndex", DbType="Int NOT NULL")]
		public int VisitPageIndex
		{
			get
			{
				return this._VisitPageIndex;
			}
			set
			{
				if ((this._VisitPageIndex != value))
				{
					this.OnVisitPageIndexChanging(value);
					this.SendPropertyChanging();
					this._VisitPageIndex = value;
					this.SendPropertyChanged("VisitPageIndex");
					this.OnVisitPageIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this.OnDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DateTime = value;
					this.SendPropertyChanged("DateTime");
					this.OnDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemLanguage", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ItemLanguage
		{
			get
			{
				return this._ItemLanguage;
			}
			set
			{
				if ((this._ItemLanguage != value))
				{
					this.OnItemLanguageChanging(value);
					this.SendPropertyChanging();
					this._ItemLanguage = value;
					this.SendPropertyChanged("ItemLanguage");
					this.OnItemLanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemVersion", DbType="Int NOT NULL")]
		public int ItemVersion
		{
			get
			{
				return this._ItemVersion;
			}
			set
			{
				if ((this._ItemVersion != value))
				{
					this.OnItemVersionChanging(value);
					this.SendPropertyChanging();
					this._ItemVersion = value;
					this.SendPropertyChanged("ItemVersion");
					this.OnItemVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DeviceId
		{
			get
			{
				return this._DeviceId;
			}
			set
			{
				if ((this._DeviceId != value))
				{
					this.OnDeviceIdChanging(value);
					this.SendPropertyChanging();
					this._DeviceId = value;
					this.SendPropertyChanged("DeviceId");
					this.OnDeviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(800) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlText", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string UrlText
		{
			get
			{
				return this._UrlText;
			}
			set
			{
				if ((this._UrlText != value))
				{
					this.OnUrlTextChanging(value);
					this.SendPropertyChanging();
					this._UrlText = value;
					this.SendPropertyChanged("UrlText");
					this.OnUrlTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestSetId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TestSetId
		{
			get
			{
				return this._TestSetId;
			}
			set
			{
				if ((this._TestSetId != value))
				{
					this.OnTestSetIdChanging(value);
					this.SendPropertyChanging();
					this._TestSetId = value;
					this.SendPropertyChanged("TestSetId");
					this.OnTestSetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestValues", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TestValues
		{
			get
			{
				return this._TestValues;
			}
			set
			{
				if ((this._TestValues != value))
				{
					this.OnTestValuesChanging(value);
					this.SendPropertyChanging();
					this._TestValues = value;
					this.SendPropertyChanged("TestValues");
					this.OnTestValuesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Int")]
		public System.Nullable<int> Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NVarChar(MAX)")]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DeviceName
		{
			get
			{
				return this._DeviceName;
			}
			set
			{
				if ((this._DeviceName != value))
				{
					this.OnDeviceNameChanging(value);
					this.SendPropertyChanging();
					this._DeviceName = value;
					this.SendPropertyChanged("DeviceName");
					this.OnDeviceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rn", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long rn
		{
			get
			{
				return this._rn;
			}
			set
			{
				if ((this._rn != value))
				{
					this.OnrnChanging(value);
					this.SendPropertyChanging();
					this._rn = value;
					this.SendPropertyChanged("rn");
					this.OnrnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Page_PageEvent", Storage="_PageEvents", ThisKey="PageId", OtherKey="PageId")]
		public EntitySet<PageEvent> PageEvents
		{
			get
			{
				return this._PageEvents;
			}
			set
			{
				this._PageEvents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visit_Page", Storage="_Visit", ThisKey="VisitId", OtherKey="VisitId", IsForeignKey=true)]
		public Visit Visit
		{
			get
			{
				return this._Visit.Entity;
			}
			set
			{
				Visit previousValue = this._Visit.Entity;
				if (((previousValue != value) 
							|| (this._Visit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Visit.Entity = null;
						previousValue.Pages.Remove(this);
					}
					this._Visit.Entity = value;
					if ((value != null))
					{
						value.Pages.Add(this);
						this._VisitId = value.VisitId;
					}
					else
					{
						this._VisitId = default(System.Guid);
					}
					this.SendPropertyChanged("Visit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visitor_Page", Storage="_Visitor", ThisKey="VisitorId", OtherKey="VisitorId", IsForeignKey=true)]
		public Visitor Visitor
		{
			get
			{
				return this._Visitor.Entity;
			}
			set
			{
				Visitor previousValue = this._Visitor.Entity;
				if (((previousValue != value) 
							|| (this._Visitor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Visitor.Entity = null;
						previousValue.Pages.Remove(this);
					}
					this._Visitor.Entity = value;
					if ((value != null))
					{
						value.Pages.Add(this);
						this._VisitorId = value.VisitorId;
					}
					else
					{
						this._VisitorId = default(System.Guid);
					}
					this.SendPropertyChanged("Visitor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PageEvents(PageEvent entity)
		{
			this.SendPropertyChanging();
			entity.Page = this;
		}
		
		private void detach_PageEvents(PageEvent entity)
		{
			this.SendPropertyChanging();
			entity.Page = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Profiles")]
	public partial class Profile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ProfileId;
		
		private System.Guid _VisitId;
		
		private System.Guid _VisitorId;
		
		private string _ProfileName;
		
		private string _PatternValues;
		
		private string _PatternLabel;
		
		private System.Nullable<System.Guid> _PatternId;
		
		private long _rn;
		
		private EntityRef<Visit> _Visit;
		
		private EntityRef<Visitor> _Visitor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProfileIdChanging(System.Guid value);
    partial void OnProfileIdChanged();
    partial void OnVisitIdChanging(System.Guid value);
    partial void OnVisitIdChanged();
    partial void OnVisitorIdChanging(System.Guid value);
    partial void OnVisitorIdChanged();
    partial void OnProfileNameChanging(string value);
    partial void OnProfileNameChanged();
    partial void OnPatternValuesChanging(string value);
    partial void OnPatternValuesChanged();
    partial void OnPatternLabelChanging(string value);
    partial void OnPatternLabelChanged();
    partial void OnPatternIdChanging(System.Nullable<System.Guid> value);
    partial void OnPatternIdChanged();
    partial void OnrnChanging(long value);
    partial void OnrnChanged();
    #endregion
		
		public Profile()
		{
			this._Visit = default(EntityRef<Visit>);
			this._Visitor = default(EntityRef<Visitor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ProfileId
		{
			get
			{
				return this._ProfileId;
			}
			set
			{
				if ((this._ProfileId != value))
				{
					this.OnProfileIdChanging(value);
					this.SendPropertyChanging();
					this._ProfileId = value;
					this.SendPropertyChanged("ProfileId");
					this.OnProfileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VisitId
		{
			get
			{
				return this._VisitId;
			}
			set
			{
				if ((this._VisitId != value))
				{
					if (this._Visit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVisitIdChanging(value);
					this.SendPropertyChanging();
					this._VisitId = value;
					this.SendPropertyChanged("VisitId");
					this.OnVisitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitorId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VisitorId
		{
			get
			{
				return this._VisitorId;
			}
			set
			{
				if ((this._VisitorId != value))
				{
					if (this._Visitor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVisitorIdChanging(value);
					this.SendPropertyChanging();
					this._VisitorId = value;
					this.SendPropertyChanged("VisitorId");
					this.OnVisitorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProfileName
		{
			get
			{
				return this._ProfileName;
			}
			set
			{
				if ((this._ProfileName != value))
				{
					this.OnProfileNameChanging(value);
					this.SendPropertyChanging();
					this._ProfileName = value;
					this.SendPropertyChanged("ProfileName");
					this.OnProfileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatternValues", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PatternValues
		{
			get
			{
				return this._PatternValues;
			}
			set
			{
				if ((this._PatternValues != value))
				{
					this.OnPatternValuesChanging(value);
					this.SendPropertyChanging();
					this._PatternValues = value;
					this.SendPropertyChanged("PatternValues");
					this.OnPatternValuesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatternLabel", DbType="NVarChar(MAX)")]
		public string PatternLabel
		{
			get
			{
				return this._PatternLabel;
			}
			set
			{
				if ((this._PatternLabel != value))
				{
					this.OnPatternLabelChanging(value);
					this.SendPropertyChanging();
					this._PatternLabel = value;
					this.SendPropertyChanged("PatternLabel");
					this.OnPatternLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatternId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PatternId
		{
			get
			{
				return this._PatternId;
			}
			set
			{
				if ((this._PatternId != value))
				{
					this.OnPatternIdChanging(value);
					this.SendPropertyChanging();
					this._PatternId = value;
					this.SendPropertyChanged("PatternId");
					this.OnPatternIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rn", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long rn
		{
			get
			{
				return this._rn;
			}
			set
			{
				if ((this._rn != value))
				{
					this.OnrnChanging(value);
					this.SendPropertyChanging();
					this._rn = value;
					this.SendPropertyChanged("rn");
					this.OnrnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visit_Profile", Storage="_Visit", ThisKey="VisitId", OtherKey="VisitId", IsForeignKey=true)]
		public Visit Visit
		{
			get
			{
				return this._Visit.Entity;
			}
			set
			{
				Visit previousValue = this._Visit.Entity;
				if (((previousValue != value) 
							|| (this._Visit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Visit.Entity = null;
						previousValue.Profiles.Remove(this);
					}
					this._Visit.Entity = value;
					if ((value != null))
					{
						value.Profiles.Add(this);
						this._VisitId = value.VisitId;
					}
					else
					{
						this._VisitId = default(System.Guid);
					}
					this.SendPropertyChanged("Visit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visitor_Profile", Storage="_Visitor", ThisKey="VisitorId", OtherKey="VisitorId", IsForeignKey=true)]
		public Visitor Visitor
		{
			get
			{
				return this._Visitor.Entity;
			}
			set
			{
				Visitor previousValue = this._Visitor.Entity;
				if (((previousValue != value) 
							|| (this._Visitor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Visitor.Entity = null;
						previousValue.Profiles.Remove(this);
					}
					this._Visitor.Entity = value;
					if ((value != null))
					{
						value.Profiles.Add(this);
						this._VisitorId = value.VisitorId;
					}
					else
					{
						this._VisitorId = default(System.Guid);
					}
					this.SendPropertyChanged("Visitor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReferringSites")]
	public partial class ReferringSite : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ReferringSiteId;
		
		private string _Host;
		
		private int _TrafficType;
		
		private EntitySet<Visit> _Visits;
		
		private EntityRef<TrafficType> _TrafficType1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReferringSiteIdChanging(System.Guid value);
    partial void OnReferringSiteIdChanged();
    partial void OnHostChanging(string value);
    partial void OnHostChanged();
    partial void OnTrafficTypeChanging(int value);
    partial void OnTrafficTypeChanged();
    #endregion
		
		public ReferringSite()
		{
			this._Visits = new EntitySet<Visit>(new Action<Visit>(this.attach_Visits), new Action<Visit>(this.detach_Visits));
			this._TrafficType1 = default(EntityRef<TrafficType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferringSiteId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ReferringSiteId
		{
			get
			{
				return this._ReferringSiteId;
			}
			set
			{
				if ((this._ReferringSiteId != value))
				{
					this.OnReferringSiteIdChanging(value);
					this.SendPropertyChanging();
					this._ReferringSiteId = value;
					this.SendPropertyChanged("ReferringSiteId");
					this.OnReferringSiteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Host", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Host
		{
			get
			{
				return this._Host;
			}
			set
			{
				if ((this._Host != value))
				{
					this.OnHostChanging(value);
					this.SendPropertyChanging();
					this._Host = value;
					this.SendPropertyChanged("Host");
					this.OnHostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrafficType", DbType="Int NOT NULL")]
		public int TrafficType
		{
			get
			{
				return this._TrafficType;
			}
			set
			{
				if ((this._TrafficType != value))
				{
					if (this._TrafficType1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrafficTypeChanging(value);
					this.SendPropertyChanging();
					this._TrafficType = value;
					this.SendPropertyChanged("TrafficType");
					this.OnTrafficTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReferringSite_Visit", Storage="_Visits", ThisKey="ReferringSiteId", OtherKey="ReferringSiteId")]
		public EntitySet<Visit> Visits
		{
			get
			{
				return this._Visits;
			}
			set
			{
				this._Visits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrafficType_ReferringSite", Storage="_TrafficType1", ThisKey="TrafficType", OtherKey="TrafficType1", IsForeignKey=true)]
		public TrafficType TrafficType1
		{
			get
			{
				return this._TrafficType1.Entity;
			}
			set
			{
				TrafficType previousValue = this._TrafficType1.Entity;
				if (((previousValue != value) 
							|| (this._TrafficType1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrafficType1.Entity = null;
						previousValue.ReferringSites.Remove(this);
					}
					this._TrafficType1.Entity = value;
					if ((value != null))
					{
						value.ReferringSites.Add(this);
						this._TrafficType = value.TrafficType1;
					}
					else
					{
						this._TrafficType = default(int);
					}
					this.SendPropertyChanged("TrafficType1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Visits(Visit entity)
		{
			this.SendPropertyChanging();
			entity.ReferringSite = this;
		}
		
		private void detach_Visits(Visit entity)
		{
			this.SendPropertyChanging();
			entity.ReferringSite = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Screens")]
	public partial class Screen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ScreenId;
		
		private string _Text;
		
		private int _Width;
		
		private int _Height;
		
		private EntitySet<Visit> _Visits;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScreenIdChanging(System.Guid value);
    partial void OnScreenIdChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnWidthChanging(int value);
    partial void OnWidthChanged();
    partial void OnHeightChanging(int value);
    partial void OnHeightChanged();
    #endregion
		
		public Screen()
		{
			this._Visits = new EntitySet<Visit>(new Action<Visit>(this.attach_Visits), new Action<Visit>(this.detach_Visits));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScreenId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ScreenId
		{
			get
			{
				return this._ScreenId;
			}
			set
			{
				if ((this._ScreenId != value))
				{
					this.OnScreenIdChanging(value);
					this.SendPropertyChanging();
					this._ScreenId = value;
					this.SendPropertyChanged("ScreenId");
					this.OnScreenIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Int NOT NULL")]
		public int Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Int NOT NULL")]
		public int Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Screen_Visit", Storage="_Visits", ThisKey="ScreenId", OtherKey="ScreenId")]
		public EntitySet<Visit> Visits
		{
			get
			{
				return this._Visits;
			}
			set
			{
				this._Visits.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Visits(Visit entity)
		{
			this.SendPropertyChanging();
			entity.Screen = this;
		}
		
		private void detach_Visits(Visit entity)
		{
			this.SendPropertyChanging();
			entity.Screen = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Status")]
	public partial class Status : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _StatusId;
		
		private string _InstanceName;
		
		private string _Text;
		
		private System.Nullable<System.DateTime> _LastSuccessful;
		
		private System.Nullable<System.DateTime> _LastFailed;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStatusIdChanging(System.Guid value);
    partial void OnStatusIdChanged();
    partial void OnInstanceNameChanging(string value);
    partial void OnInstanceNameChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnLastSuccessfulChanging(System.Nullable<System.DateTime> value);
    partial void OnLastSuccessfulChanged();
    partial void OnLastFailedChanging(System.Nullable<System.DateTime> value);
    partial void OnLastFailedChanged();
    #endregion
		
		public Status()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid StatusId
		{
			get
			{
				return this._StatusId;
			}
			set
			{
				if ((this._StatusId != value))
				{
					this.OnStatusIdChanging(value);
					this.SendPropertyChanging();
					this._StatusId = value;
					this.SendPropertyChanged("StatusId");
					this.OnStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstanceName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string InstanceName
		{
			get
			{
				return this._InstanceName;
			}
			set
			{
				if ((this._InstanceName != value))
				{
					this.OnInstanceNameChanging(value);
					this.SendPropertyChanging();
					this._InstanceName = value;
					this.SendPropertyChanged("InstanceName");
					this.OnInstanceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastSuccessful", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastSuccessful
		{
			get
			{
				return this._LastSuccessful;
			}
			set
			{
				if ((this._LastSuccessful != value))
				{
					this.OnLastSuccessfulChanging(value);
					this.SendPropertyChanging();
					this._LastSuccessful = value;
					this.SendPropertyChanged("LastSuccessful");
					this.OnLastSuccessfulChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastFailed", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastFailed
		{
			get
			{
				return this._LastFailed;
			}
			set
			{
				if ((this._LastFailed != value))
				{
					this.OnLastFailedChanging(value);
					this.SendPropertyChanging();
					this._LastFailed = value;
					this.SendPropertyChanged("LastFailed");
					this.OnLastFailedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TestDefinitions")]
	public partial class TestDefinition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _TestSetId;
		
		private string _TestSetName;
		
		private System.Guid _VariableId;
		
		private string _VariableLabel;
		
		private short _VariableIndex;
		
		private System.Guid _ValueId;
		
		private string _ValueLabel;
		
		private short _Value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTestSetIdChanging(System.Guid value);
    partial void OnTestSetIdChanged();
    partial void OnTestSetNameChanging(string value);
    partial void OnTestSetNameChanged();
    partial void OnVariableIdChanging(System.Guid value);
    partial void OnVariableIdChanged();
    partial void OnVariableLabelChanging(string value);
    partial void OnVariableLabelChanged();
    partial void OnVariableIndexChanging(short value);
    partial void OnVariableIndexChanged();
    partial void OnValueIdChanging(System.Guid value);
    partial void OnValueIdChanged();
    partial void OnValueLabelChanging(string value);
    partial void OnValueLabelChanged();
    partial void OnValueChanging(short value);
    partial void OnValueChanged();
    #endregion
		
		public TestDefinition()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestSetId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TestSetId
		{
			get
			{
				return this._TestSetId;
			}
			set
			{
				if ((this._TestSetId != value))
				{
					this.OnTestSetIdChanging(value);
					this.SendPropertyChanging();
					this._TestSetId = value;
					this.SendPropertyChanged("TestSetId");
					this.OnTestSetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestSetName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TestSetName
		{
			get
			{
				return this._TestSetName;
			}
			set
			{
				if ((this._TestSetName != value))
				{
					this.OnTestSetNameChanging(value);
					this.SendPropertyChanging();
					this._TestSetName = value;
					this.SendPropertyChanged("TestSetName");
					this.OnTestSetNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VariableId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VariableId
		{
			get
			{
				return this._VariableId;
			}
			set
			{
				if ((this._VariableId != value))
				{
					this.OnVariableIdChanging(value);
					this.SendPropertyChanging();
					this._VariableId = value;
					this.SendPropertyChanged("VariableId");
					this.OnVariableIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VariableLabel", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string VariableLabel
		{
			get
			{
				return this._VariableLabel;
			}
			set
			{
				if ((this._VariableLabel != value))
				{
					this.OnVariableLabelChanging(value);
					this.SendPropertyChanging();
					this._VariableLabel = value;
					this.SendPropertyChanged("VariableLabel");
					this.OnVariableLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VariableIndex", DbType="SmallInt NOT NULL")]
		public short VariableIndex
		{
			get
			{
				return this._VariableIndex;
			}
			set
			{
				if ((this._VariableIndex != value))
				{
					this.OnVariableIndexChanging(value);
					this.SendPropertyChanging();
					this._VariableIndex = value;
					this.SendPropertyChanged("VariableIndex");
					this.OnVariableIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ValueId
		{
			get
			{
				return this._ValueId;
			}
			set
			{
				if ((this._ValueId != value))
				{
					this.OnValueIdChanging(value);
					this.SendPropertyChanging();
					this._ValueId = value;
					this.SendPropertyChanged("ValueId");
					this.OnValueIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueLabel", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ValueLabel
		{
			get
			{
				return this._ValueLabel;
			}
			set
			{
				if ((this._ValueLabel != value))
				{
					this.OnValueLabelChanging(value);
					this.SendPropertyChanging();
					this._ValueLabel = value;
					this.SendPropertyChanged("ValueLabel");
					this.OnValueLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="SmallInt NOT NULL")]
		public short Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrafficTypes")]
	public partial class TrafficType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TrafficType1;
		
		private string _Text;
		
		private EntitySet<Visit> _Visits;
		
		private EntitySet<ReferringSite> _ReferringSites;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrafficType1Changing(int value);
    partial void OnTrafficType1Changed();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    #endregion
		
		public TrafficType()
		{
			this._Visits = new EntitySet<Visit>(new Action<Visit>(this.attach_Visits), new Action<Visit>(this.detach_Visits));
			this._ReferringSites = new EntitySet<ReferringSite>(new Action<ReferringSite>(this.attach_ReferringSites), new Action<ReferringSite>(this.detach_ReferringSites));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="TrafficType", Storage="_TrafficType1", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TrafficType1
		{
			get
			{
				return this._TrafficType1;
			}
			set
			{
				if ((this._TrafficType1 != value))
				{
					this.OnTrafficType1Changing(value);
					this.SendPropertyChanging();
					this._TrafficType1 = value;
					this.SendPropertyChanged("TrafficType1");
					this.OnTrafficType1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrafficType_Visit", Storage="_Visits", ThisKey="TrafficType1", OtherKey="TrafficType")]
		public EntitySet<Visit> Visits
		{
			get
			{
				return this._Visits;
			}
			set
			{
				this._Visits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrafficType_ReferringSite", Storage="_ReferringSites", ThisKey="TrafficType1", OtherKey="TrafficType")]
		public EntitySet<ReferringSite> ReferringSites
		{
			get
			{
				return this._ReferringSites;
			}
			set
			{
				this._ReferringSites.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Visits(Visit entity)
		{
			this.SendPropertyChanging();
			entity.TrafficType1 = this;
		}
		
		private void detach_Visits(Visit entity)
		{
			this.SendPropertyChanging();
			entity.TrafficType1 = null;
		}
		
		private void attach_ReferringSites(ReferringSite entity)
		{
			this.SendPropertyChanging();
			entity.TrafficType1 = this;
		}
		
		private void detach_ReferringSites(ReferringSite entity)
		{
			this.SendPropertyChanging();
			entity.TrafficType1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserAgents")]
	public partial class UserAgent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserAgentId;
		
		private string _UserAgent1;
		
		private string _CachedValue;
		
		private System.Nullable<System.DateTime> _Fetched;
		
		private int _VisitorClassification;
		
		private EntitySet<Visit> _Visits;
		
		private EntityRef<VisitorClassification> _VisitorClassification1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserAgentIdChanging(System.Guid value);
    partial void OnUserAgentIdChanged();
    partial void OnUserAgent1Changing(string value);
    partial void OnUserAgent1Changed();
    partial void OnCachedValueChanging(string value);
    partial void OnCachedValueChanged();
    partial void OnFetchedChanging(System.Nullable<System.DateTime> value);
    partial void OnFetchedChanged();
    partial void OnVisitorClassificationChanging(int value);
    partial void OnVisitorClassificationChanged();
    #endregion
		
		public UserAgent()
		{
			this._Visits = new EntitySet<Visit>(new Action<Visit>(this.attach_Visits), new Action<Visit>(this.detach_Visits));
			this._VisitorClassification1 = default(EntityRef<VisitorClassification>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAgentId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserAgentId
		{
			get
			{
				return this._UserAgentId;
			}
			set
			{
				if ((this._UserAgentId != value))
				{
					this.OnUserAgentIdChanging(value);
					this.SendPropertyChanging();
					this._UserAgentId = value;
					this.SendPropertyChanged("UserAgentId");
					this.OnUserAgentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="UserAgent", Storage="_UserAgent1", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string UserAgent1
		{
			get
			{
				return this._UserAgent1;
			}
			set
			{
				if ((this._UserAgent1 != value))
				{
					this.OnUserAgent1Changing(value);
					this.SendPropertyChanging();
					this._UserAgent1 = value;
					this.SendPropertyChanged("UserAgent1");
					this.OnUserAgent1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CachedValue", DbType="NVarChar(MAX)")]
		public string CachedValue
		{
			get
			{
				return this._CachedValue;
			}
			set
			{
				if ((this._CachedValue != value))
				{
					this.OnCachedValueChanging(value);
					this.SendPropertyChanging();
					this._CachedValue = value;
					this.SendPropertyChanged("CachedValue");
					this.OnCachedValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fetched", DbType="DateTime")]
		public System.Nullable<System.DateTime> Fetched
		{
			get
			{
				return this._Fetched;
			}
			set
			{
				if ((this._Fetched != value))
				{
					this.OnFetchedChanging(value);
					this.SendPropertyChanging();
					this._Fetched = value;
					this.SendPropertyChanged("Fetched");
					this.OnFetchedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitorClassification", DbType="Int NOT NULL")]
		public int VisitorClassification
		{
			get
			{
				return this._VisitorClassification;
			}
			set
			{
				if ((this._VisitorClassification != value))
				{
					if (this._VisitorClassification1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVisitorClassificationChanging(value);
					this.SendPropertyChanging();
					this._VisitorClassification = value;
					this.SendPropertyChanged("VisitorClassification");
					this.OnVisitorClassificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAgent_Visit", Storage="_Visits", ThisKey="UserAgentId", OtherKey="UserAgentId")]
		public EntitySet<Visit> Visits
		{
			get
			{
				return this._Visits;
			}
			set
			{
				this._Visits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VisitorClassification_UserAgent", Storage="_VisitorClassification1", ThisKey="VisitorClassification", OtherKey="VisitorClassification1", IsForeignKey=true)]
		public VisitorClassification VisitorClassification1
		{
			get
			{
				return this._VisitorClassification1.Entity;
			}
			set
			{
				VisitorClassification previousValue = this._VisitorClassification1.Entity;
				if (((previousValue != value) 
							|| (this._VisitorClassification1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VisitorClassification1.Entity = null;
						previousValue.UserAgents.Remove(this);
					}
					this._VisitorClassification1.Entity = value;
					if ((value != null))
					{
						value.UserAgents.Add(this);
						this._VisitorClassification = value.VisitorClassification1;
					}
					else
					{
						this._VisitorClassification = default(int);
					}
					this.SendPropertyChanged("VisitorClassification1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Visits(Visit entity)
		{
			this.SendPropertyChanging();
			entity.UserAgent = this;
		}
		
		private void detach_Visits(Visit entity)
		{
			this.SendPropertyChanging();
			entity.UserAgent = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VisitorClassifications")]
	public partial class VisitorClassification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VisitorClassification1;
		
		private string _Text;
		
		private EntitySet<GeoIp> _GeoIps;
		
		private EntitySet<Location> _Locations;
		
		private EntitySet<UserAgent> _UserAgents;
		
		private EntitySet<Visitor> _Visitors;
		
		private EntitySet<Visitor> _Visitors1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVisitorClassification1Changing(int value);
    partial void OnVisitorClassification1Changed();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    #endregion
		
		public VisitorClassification()
		{
			this._GeoIps = new EntitySet<GeoIp>(new Action<GeoIp>(this.attach_GeoIps), new Action<GeoIp>(this.detach_GeoIps));
			this._Locations = new EntitySet<Location>(new Action<Location>(this.attach_Locations), new Action<Location>(this.detach_Locations));
			this._UserAgents = new EntitySet<UserAgent>(new Action<UserAgent>(this.attach_UserAgents), new Action<UserAgent>(this.detach_UserAgents));
			this._Visitors = new EntitySet<Visitor>(new Action<Visitor>(this.attach_Visitors), new Action<Visitor>(this.detach_Visitors));
			this._Visitors1 = new EntitySet<Visitor>(new Action<Visitor>(this.attach_Visitors1), new Action<Visitor>(this.detach_Visitors1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="VisitorClassification", Storage="_VisitorClassification1", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int VisitorClassification1
		{
			get
			{
				return this._VisitorClassification1;
			}
			set
			{
				if ((this._VisitorClassification1 != value))
				{
					this.OnVisitorClassification1Changing(value);
					this.SendPropertyChanging();
					this._VisitorClassification1 = value;
					this.SendPropertyChanged("VisitorClassification1");
					this.OnVisitorClassification1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VisitorClassification_GeoIp", Storage="_GeoIps", ThisKey="VisitorClassification1", OtherKey="VisitorClassification")]
		public EntitySet<GeoIp> GeoIps
		{
			get
			{
				return this._GeoIps;
			}
			set
			{
				this._GeoIps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VisitorClassification_Location", Storage="_Locations", ThisKey="VisitorClassification1", OtherKey="VisitorClassification")]
		public EntitySet<Location> Locations
		{
			get
			{
				return this._Locations;
			}
			set
			{
				this._Locations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VisitorClassification_UserAgent", Storage="_UserAgents", ThisKey="VisitorClassification1", OtherKey="VisitorClassification")]
		public EntitySet<UserAgent> UserAgents
		{
			get
			{
				return this._UserAgents;
			}
			set
			{
				this._UserAgents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VisitorClassification_Visitor", Storage="_Visitors", ThisKey="VisitorClassification1", OtherKey="VisitorClassification")]
		public EntitySet<Visitor> Visitors
		{
			get
			{
				return this._Visitors;
			}
			set
			{
				this._Visitors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VisitorClassification_Visitor1", Storage="_Visitors1", ThisKey="VisitorClassification1", OtherKey="OverrideVisitorClassification")]
		public EntitySet<Visitor> Visitors1
		{
			get
			{
				return this._Visitors1;
			}
			set
			{
				this._Visitors1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GeoIps(GeoIp entity)
		{
			this.SendPropertyChanging();
			entity.VisitorClassification1 = this;
		}
		
		private void detach_GeoIps(GeoIp entity)
		{
			this.SendPropertyChanging();
			entity.VisitorClassification1 = null;
		}
		
		private void attach_Locations(Location entity)
		{
			this.SendPropertyChanging();
			entity.VisitorClassification1 = this;
		}
		
		private void detach_Locations(Location entity)
		{
			this.SendPropertyChanging();
			entity.VisitorClassification1 = null;
		}
		
		private void attach_UserAgents(UserAgent entity)
		{
			this.SendPropertyChanging();
			entity.VisitorClassification1 = this;
		}
		
		private void detach_UserAgents(UserAgent entity)
		{
			this.SendPropertyChanging();
			entity.VisitorClassification1 = null;
		}
		
		private void attach_Visitors(Visitor entity)
		{
			this.SendPropertyChanging();
			entity.VisitorClassification1 = this;
		}
		
		private void detach_Visitors(Visitor entity)
		{
			this.SendPropertyChanging();
			entity.VisitorClassification1 = null;
		}
		
		private void attach_Visitors1(Visitor entity)
		{
			this.SendPropertyChanging();
			entity.VisitorClassification2 = this;
		}
		
		private void detach_Visitors1(Visitor entity)
		{
			this.SendPropertyChanging();
			entity.VisitorClassification2 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Visitors")]
	public partial class Visitor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _VisitorId;
		
		private int _VisitorClassification;
		
		private int _OverrideVisitorClassification;
		
		private int _VisitCount;
		
		private int _Value;
		
		private int _AuthenticationLevel;
		
		private string _ExternalUser;
		
		private System.Nullable<System.Guid> _IntegrationId;
		
		private string _IntegrationLabel;
		
		private long _rn;
		
		private EntitySet<Visit> _Visits;
		
		private EntitySet<AutomationState> _AutomationStates;
		
		private EntitySet<PageEvent> _PageEvents;
		
		private EntitySet<Page> _Pages;
		
		private EntitySet<Profile> _Profiles;
		
		private EntitySet<VisitorTag> _VisitorTags;
		
		private EntityRef<VisitorClassification> _VisitorClassification1;
		
		private EntityRef<VisitorClassification> _VisitorClassification2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVisitorIdChanging(System.Guid value);
    partial void OnVisitorIdChanged();
    partial void OnVisitorClassificationChanging(int value);
    partial void OnVisitorClassificationChanged();
    partial void OnOverrideVisitorClassificationChanging(int value);
    partial void OnOverrideVisitorClassificationChanged();
    partial void OnVisitCountChanging(int value);
    partial void OnVisitCountChanged();
    partial void OnValueChanging(int value);
    partial void OnValueChanged();
    partial void OnAuthenticationLevelChanging(int value);
    partial void OnAuthenticationLevelChanged();
    partial void OnExternalUserChanging(string value);
    partial void OnExternalUserChanged();
    partial void OnIntegrationIdChanging(System.Nullable<System.Guid> value);
    partial void OnIntegrationIdChanged();
    partial void OnIntegrationLabelChanging(string value);
    partial void OnIntegrationLabelChanged();
    partial void OnrnChanging(long value);
    partial void OnrnChanged();
    #endregion
		
		public Visitor()
		{
			this._Visits = new EntitySet<Visit>(new Action<Visit>(this.attach_Visits), new Action<Visit>(this.detach_Visits));
			this._AutomationStates = new EntitySet<AutomationState>(new Action<AutomationState>(this.attach_AutomationStates), new Action<AutomationState>(this.detach_AutomationStates));
			this._PageEvents = new EntitySet<PageEvent>(new Action<PageEvent>(this.attach_PageEvents), new Action<PageEvent>(this.detach_PageEvents));
			this._Pages = new EntitySet<Page>(new Action<Page>(this.attach_Pages), new Action<Page>(this.detach_Pages));
			this._Profiles = new EntitySet<Profile>(new Action<Profile>(this.attach_Profiles), new Action<Profile>(this.detach_Profiles));
			this._VisitorTags = new EntitySet<VisitorTag>(new Action<VisitorTag>(this.attach_VisitorTags), new Action<VisitorTag>(this.detach_VisitorTags));
			this._VisitorClassification1 = default(EntityRef<VisitorClassification>);
			this._VisitorClassification2 = default(EntityRef<VisitorClassification>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitorId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid VisitorId
		{
			get
			{
				return this._VisitorId;
			}
			set
			{
				if ((this._VisitorId != value))
				{
					this.OnVisitorIdChanging(value);
					this.SendPropertyChanging();
					this._VisitorId = value;
					this.SendPropertyChanged("VisitorId");
					this.OnVisitorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitorClassification", DbType="Int NOT NULL")]
		public int VisitorClassification
		{
			get
			{
				return this._VisitorClassification;
			}
			set
			{
				if ((this._VisitorClassification != value))
				{
					if (this._VisitorClassification1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVisitorClassificationChanging(value);
					this.SendPropertyChanging();
					this._VisitorClassification = value;
					this.SendPropertyChanged("VisitorClassification");
					this.OnVisitorClassificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverrideVisitorClassification", DbType="Int NOT NULL")]
		public int OverrideVisitorClassification
		{
			get
			{
				return this._OverrideVisitorClassification;
			}
			set
			{
				if ((this._OverrideVisitorClassification != value))
				{
					if (this._VisitorClassification2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOverrideVisitorClassificationChanging(value);
					this.SendPropertyChanging();
					this._OverrideVisitorClassification = value;
					this.SendPropertyChanged("OverrideVisitorClassification");
					this.OnOverrideVisitorClassificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitCount", DbType="Int NOT NULL")]
		public int VisitCount
		{
			get
			{
				return this._VisitCount;
			}
			set
			{
				if ((this._VisitCount != value))
				{
					this.OnVisitCountChanging(value);
					this.SendPropertyChanging();
					this._VisitCount = value;
					this.SendPropertyChanged("VisitCount");
					this.OnVisitCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Int NOT NULL")]
		public int Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthenticationLevel", DbType="Int NOT NULL")]
		public int AuthenticationLevel
		{
			get
			{
				return this._AuthenticationLevel;
			}
			set
			{
				if ((this._AuthenticationLevel != value))
				{
					this.OnAuthenticationLevelChanging(value);
					this.SendPropertyChanging();
					this._AuthenticationLevel = value;
					this.SendPropertyChanged("AuthenticationLevel");
					this.OnAuthenticationLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalUser", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string ExternalUser
		{
			get
			{
				return this._ExternalUser;
			}
			set
			{
				if ((this._ExternalUser != value))
				{
					this.OnExternalUserChanging(value);
					this.SendPropertyChanging();
					this._ExternalUser = value;
					this.SendPropertyChanged("ExternalUser");
					this.OnExternalUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntegrationId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IntegrationId
		{
			get
			{
				return this._IntegrationId;
			}
			set
			{
				if ((this._IntegrationId != value))
				{
					this.OnIntegrationIdChanging(value);
					this.SendPropertyChanging();
					this._IntegrationId = value;
					this.SendPropertyChanged("IntegrationId");
					this.OnIntegrationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntegrationLabel", DbType="NVarChar(100)")]
		public string IntegrationLabel
		{
			get
			{
				return this._IntegrationLabel;
			}
			set
			{
				if ((this._IntegrationLabel != value))
				{
					this.OnIntegrationLabelChanging(value);
					this.SendPropertyChanging();
					this._IntegrationLabel = value;
					this.SendPropertyChanged("IntegrationLabel");
					this.OnIntegrationLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rn", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long rn
		{
			get
			{
				return this._rn;
			}
			set
			{
				if ((this._rn != value))
				{
					this.OnrnChanging(value);
					this.SendPropertyChanging();
					this._rn = value;
					this.SendPropertyChanged("rn");
					this.OnrnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visitor_Visit", Storage="_Visits", ThisKey="VisitorId", OtherKey="VisitorId")]
		public EntitySet<Visit> Visits
		{
			get
			{
				return this._Visits;
			}
			set
			{
				this._Visits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visitor_AutomationState", Storage="_AutomationStates", ThisKey="VisitorId", OtherKey="VisitorId")]
		public EntitySet<AutomationState> AutomationStates
		{
			get
			{
				return this._AutomationStates;
			}
			set
			{
				this._AutomationStates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visitor_PageEvent", Storage="_PageEvents", ThisKey="VisitorId", OtherKey="VisitorId")]
		public EntitySet<PageEvent> PageEvents
		{
			get
			{
				return this._PageEvents;
			}
			set
			{
				this._PageEvents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visitor_Page", Storage="_Pages", ThisKey="VisitorId", OtherKey="VisitorId")]
		public EntitySet<Page> Pages
		{
			get
			{
				return this._Pages;
			}
			set
			{
				this._Pages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visitor_Profile", Storage="_Profiles", ThisKey="VisitorId", OtherKey="VisitorId")]
		public EntitySet<Profile> Profiles
		{
			get
			{
				return this._Profiles;
			}
			set
			{
				this._Profiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visitor_VisitorTag", Storage="_VisitorTags", ThisKey="VisitorId", OtherKey="VisitorId")]
		public EntitySet<VisitorTag> VisitorTags
		{
			get
			{
				return this._VisitorTags;
			}
			set
			{
				this._VisitorTags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VisitorClassification_Visitor", Storage="_VisitorClassification1", ThisKey="VisitorClassification", OtherKey="VisitorClassification1", IsForeignKey=true)]
		public VisitorClassification VisitorClassification1
		{
			get
			{
				return this._VisitorClassification1.Entity;
			}
			set
			{
				VisitorClassification previousValue = this._VisitorClassification1.Entity;
				if (((previousValue != value) 
							|| (this._VisitorClassification1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VisitorClassification1.Entity = null;
						previousValue.Visitors.Remove(this);
					}
					this._VisitorClassification1.Entity = value;
					if ((value != null))
					{
						value.Visitors.Add(this);
						this._VisitorClassification = value.VisitorClassification1;
					}
					else
					{
						this._VisitorClassification = default(int);
					}
					this.SendPropertyChanged("VisitorClassification1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VisitorClassification_Visitor1", Storage="_VisitorClassification2", ThisKey="OverrideVisitorClassification", OtherKey="VisitorClassification1", IsForeignKey=true)]
		public VisitorClassification VisitorClassification2
		{
			get
			{
				return this._VisitorClassification2.Entity;
			}
			set
			{
				VisitorClassification previousValue = this._VisitorClassification2.Entity;
				if (((previousValue != value) 
							|| (this._VisitorClassification2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VisitorClassification2.Entity = null;
						previousValue.Visitors1.Remove(this);
					}
					this._VisitorClassification2.Entity = value;
					if ((value != null))
					{
						value.Visitors1.Add(this);
						this._OverrideVisitorClassification = value.VisitorClassification1;
					}
					else
					{
						this._OverrideVisitorClassification = default(int);
					}
					this.SendPropertyChanged("VisitorClassification2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Visits(Visit entity)
		{
			this.SendPropertyChanging();
			entity.Visitor = this;
		}
		
		private void detach_Visits(Visit entity)
		{
			this.SendPropertyChanging();
			entity.Visitor = null;
		}
		
		private void attach_AutomationStates(AutomationState entity)
		{
			this.SendPropertyChanging();
			entity.Visitor = this;
		}
		
		private void detach_AutomationStates(AutomationState entity)
		{
			this.SendPropertyChanging();
			entity.Visitor = null;
		}
		
		private void attach_PageEvents(PageEvent entity)
		{
			this.SendPropertyChanging();
			entity.Visitor = this;
		}
		
		private void detach_PageEvents(PageEvent entity)
		{
			this.SendPropertyChanging();
			entity.Visitor = null;
		}
		
		private void attach_Pages(Page entity)
		{
			this.SendPropertyChanging();
			entity.Visitor = this;
		}
		
		private void detach_Pages(Page entity)
		{
			this.SendPropertyChanging();
			entity.Visitor = null;
		}
		
		private void attach_Profiles(Profile entity)
		{
			this.SendPropertyChanging();
			entity.Visitor = this;
		}
		
		private void detach_Profiles(Profile entity)
		{
			this.SendPropertyChanging();
			entity.Visitor = null;
		}
		
		private void attach_VisitorTags(VisitorTag entity)
		{
			this.SendPropertyChanging();
			entity.Visitor = this;
		}
		
		private void detach_VisitorTags(VisitorTag entity)
		{
			this.SendPropertyChanging();
			entity.Visitor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VisitorTags")]
	public partial class VisitorTag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _VisitorTagId;
		
		private System.Guid _VisitorId;
		
		private string _TagName;
		
		private string _TagValue;
		
		private System.DateTime _DateTime;
		
		private System.Guid _AcquaintanceId;
		
		private long _rn;
		
		private EntityRef<Visitor> _Visitor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVisitorTagIdChanging(System.Guid value);
    partial void OnVisitorTagIdChanged();
    partial void OnVisitorIdChanging(System.Guid value);
    partial void OnVisitorIdChanged();
    partial void OnTagNameChanging(string value);
    partial void OnTagNameChanged();
    partial void OnTagValueChanging(string value);
    partial void OnTagValueChanged();
    partial void OnDateTimeChanging(System.DateTime value);
    partial void OnDateTimeChanged();
    partial void OnAcquaintanceIdChanging(System.Guid value);
    partial void OnAcquaintanceIdChanged();
    partial void OnrnChanging(long value);
    partial void OnrnChanged();
    #endregion
		
		public VisitorTag()
		{
			this._Visitor = default(EntityRef<Visitor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitorTagId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid VisitorTagId
		{
			get
			{
				return this._VisitorTagId;
			}
			set
			{
				if ((this._VisitorTagId != value))
				{
					this.OnVisitorTagIdChanging(value);
					this.SendPropertyChanging();
					this._VisitorTagId = value;
					this.SendPropertyChanged("VisitorTagId");
					this.OnVisitorTagIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitorId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VisitorId
		{
			get
			{
				return this._VisitorId;
			}
			set
			{
				if ((this._VisitorId != value))
				{
					if (this._Visitor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVisitorIdChanging(value);
					this.SendPropertyChanging();
					this._VisitorId = value;
					this.SendPropertyChanged("VisitorId");
					this.OnVisitorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagName", DbType="NVarChar(450) NOT NULL", CanBeNull=false)]
		public string TagName
		{
			get
			{
				return this._TagName;
			}
			set
			{
				if ((this._TagName != value))
				{
					this.OnTagNameChanging(value);
					this.SendPropertyChanging();
					this._TagName = value;
					this.SendPropertyChanged("TagName");
					this.OnTagNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagValue", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string TagValue
		{
			get
			{
				return this._TagValue;
			}
			set
			{
				if ((this._TagValue != value))
				{
					this.OnTagValueChanging(value);
					this.SendPropertyChanging();
					this._TagValue = value;
					this.SendPropertyChanged("TagValue");
					this.OnTagValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this.OnDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DateTime = value;
					this.SendPropertyChanged("DateTime");
					this.OnDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcquaintanceId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AcquaintanceId
		{
			get
			{
				return this._AcquaintanceId;
			}
			set
			{
				if ((this._AcquaintanceId != value))
				{
					this.OnAcquaintanceIdChanging(value);
					this.SendPropertyChanging();
					this._AcquaintanceId = value;
					this.SendPropertyChanged("AcquaintanceId");
					this.OnAcquaintanceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rn", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long rn
		{
			get
			{
				return this._rn;
			}
			set
			{
				if ((this._rn != value))
				{
					this.OnrnChanging(value);
					this.SendPropertyChanging();
					this._rn = value;
					this.SendPropertyChanged("rn");
					this.OnrnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visitor_VisitorTag", Storage="_Visitor", ThisKey="VisitorId", OtherKey="VisitorId", IsForeignKey=true)]
		public Visitor Visitor
		{
			get
			{
				return this._Visitor.Entity;
			}
			set
			{
				Visitor previousValue = this._Visitor.Entity;
				if (((previousValue != value) 
							|| (this._Visitor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Visitor.Entity = null;
						previousValue.VisitorTags.Remove(this);
					}
					this._Visitor.Entity = value;
					if ((value != null))
					{
						value.VisitorTags.Add(this);
						this._VisitorId = value.VisitorId;
					}
					else
					{
						this._VisitorId = default(System.Guid);
					}
					this.SendPropertyChanged("Visitor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
